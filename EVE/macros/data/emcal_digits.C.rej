diff a/EVE/macros/emcal_digits.C b/EVE/macros/emcal_digits.C	(rejected hunks)
@@ -10,7 +10,13 @@
 /// \file emcal_digits.C
 /// \brief Visualize EMCAL digits
 ///
-/// A macro to read and visualize EMCAL digits
+/// A macro to read and visualize EMCAL digits. 
+/// Standalone, it does not used the goodies of the classes AliEveEMCALXXX.
+/// It could be used as a simple testing tool for further development in the classes.
+///
+/// Include it in the macro visscan_init.C in this way:
+/// exec->AddMacro(new AliEveMacro(AliEveMacro::kRunLoader, "EMCAL DIGITS", "emcal_digits.C", "emcal_digits","",kTRUE));
+/// (the last parameter of the visscan_init macro indicates that this line is active or not).
 ///
 /// \author Magali Estienne <magali.estienne@cern.ch>, SUBATECH. EMCal implementation, June 2008
 /// \author Gustavo Conesa Balbastre <Gustavo.Conesa.Balbastre@cern.ch>, LPSC-IN2P3-CNRS. DCal implementation + doxygen, May 2015.
@@ -47,6 +53,10 @@ void emcal_digits()
   TGeoNode* node = gGeoManager->GetTopVolume()->FindNode("XEN1_1");
   if (!node) return;
   
+  Int_t nModules = node->GetNdaughters();
+
+  // Get the EMCAL geometry
+  //
   AliEMCALGeometry * geom  = AliEMCALGeometry::GetInstance();  
   if (!geom) 
   {
@@ -54,16 +64,15 @@ void emcal_digits()
     geom  = AliEMCALGeometry::GetInstance("EMCAL_COMPLETE12SMV1_DCAL_8SM");
   }
     
-  Int_t nModules = node->GetNdaughters();
-
+  // Check that the EMCAL geo and the nodes from EMCAL have the same number of entries
+  //
   if(nModules != geom->GetNumberOfSuperModules())
     printf("*** === EMCAL DIGITS - N Daughter Nodes %d - N super mod %d === ***\n", 
            node->GetNdaughters(), geom->GetNumberOfSuperModules());
-  
-  TEveElementList* l = new TEveElementList("EMCAL");
-  l->SetTitle("Tooltip");
-  gEve->AddElement(l);
-  
+    
+  // Get the EMCAL bounding boxes for the super modules.
+  // 4 kind of SM: 10 Full EMCal, 2 1/3 EMCal, 6 DCal (2/3 EMCal) and 2 1/3 EMCal in DCal region.
+  //
   TGeoBBox* bbbox = (TGeoBBox*) node->GetDaughter(0) ->GetVolume()->GetShape();
   TEveFrameBox* frame_big = new TEveFrameBox();
   frame_big->SetFrameColorRGBA(200,200,0,50);
@@ -93,12 +102,21 @@ void emcal_digits()
     frame_smld->SetFrameColorRGBA(200,200,0,50);
     frame_smld->SetAABoxCenterHalfSize(0, 0, 0, sdbbox->GetDX(), sdbbox->GetDY(), sdbbox->GetDZ());
   }
-
   
+  // Define EVE stuff
+  //
+  TEveElementList* l = new TEveElementList("EMCAL");
+  l->SetTitle("Tooltip");
+  gEve->AddElement(l);
+
   gStyle->SetPalette(1, 0);
   TEveRGBAPalette* pal = new TEveRGBAPalette(0, 512);
   pal->SetLimits(0, 1024);
 
+  // Here we will store the EMCAL data that will be treated by EVE
+  // per each super-module.
+  // Pass the SM bounding boxes (frames).
+  //
   const Int_t nSM = nModules;
   TEveQuadSet* smodules[nSM];
   memset(smodules,0,nModules*sizeof(TEveQuadSet*));
@@ -158,7 +186,7 @@ void emcal_digits()
     time = dig->GetTime();//time of creation of digit after collision
     
     // Do not add too low ADC values (3 times pedestal)
-    if(amp < 3) continue;
+    if(amp <= 3) continue;
     
     //printf("\t Digit %d/%d: Cell ID %d; Amp %f; time %2.3e\n",idig+1,nEnt,id,amp,time);
     
@@ -177,6 +205,7 @@ void emcal_digits()
     // correct one.
     if(iSupMod >= nModules) continue;
     
+    // Push the data to the visualization tools
     TEveQuadSet* q = smodules[iSupMod];
     if (q) 
     {
@@ -188,6 +217,7 @@ void emcal_digits()
 
   rl->UnloadDigits("EMCAL");
   
+  // Send the data to EVE?
   for (Int_t sm = 0; sm < nModules; ++sm)
   {
     smodules[sm]->RefitPlex();
