2007-08-31  Alja Mrak-Tadel  <Alja.Mrak.Tadel@cern.ch>

	EVE-dev

	* RenderElement.cxx:
	* RenderElement.h:
	New virtual GetListTreeIcon(), which sets an icon picture in a list tree.

	* Reve.cxx:
        Initialize list tree icons.

	* Scene.h:
	* Track.h:
	* Viewer.h:
	* PointSet.h:
        Set specific icons for this class in a list tree.

2007-08-30  Alja Mrak-Tadel  <Alja.Mrak.Tadel@cern.ch>

	* StraightLineSet.cxx:
	* StraightLineSet.h:
        Handle translation and scale in projected line-set separately. 
	
2007-08-30  Alja Mrak-Tadel  <Alja.Mrak.Tadel@cern.ch>

	EVE-dev

	* NLTProjector.h:
	Reindent.
	
	* NLTProjectorEditor.cxx:
	* yNLTProjectorEditor.h:
	Add RGValuator for current depth.

	* StraightLineSet.cxx:
	* StraightLineSet.h:
	Use transformation matrix, to scale or move line set.

	* ZTrans.cxx:
	* ZTrans.h:
	Add multiply function with Float_t* as an argument.

2007-08-30  Matevz Tadel  <matevz.tadel@cern.ch>

	EVE-dev

	* RenderElement.cxx:
	* RenderElement.h:
	Change DenyDestroy to Int_t, replace Set with Inc/Dec
	methods. Fixed zero-ref checks accordingly.

	Symmetrized RemoveElement and RemoveElements with their Local
	parts.

	Moved code for list-tree item mgmnt from RGTopFrame to Add/Remove
	element methods here.

	* RGTopFrame.cxx:
	* RGTopFrame.h:
	Moved list-tree item mgmnt from Add/RemoveRenderElement to
	appropriate methods in RenderElement.

	Update to new RnrEl::DenyDestroy.

	Added Bool_t fKeepEmptyCont as it is queried by many macros.

	* RGBrowser.cxx:
	Update to new RnrEl::DenyDestroy.

	* PointSet.cxx:
	* PointSet.h:
	* Viewer.cxx:
	* Viewer.h:
	* Cascade.cxx:
	* Cascade.h:
	* V0.cxx:
	* V0.h:
	Update to new RnrEl::RemoveElementLocal, RemoveElementsLocal.	

	* NLTBases.cxx:
	* NLTBases.h:
	Added list<NTLProjected*> fProjectedList to NLTProjectable.
	Set of functions to manage it.
	Proper management in relevant functions of NLTProjectable and
	NTLProjected.

	* NLTTrack.cxx:
	* NLTTrack.h:
	Forward CtrlClicked() call (from gl sec-selection) to
	fProjectable.

	* NLTProjector.cxx:
	Set RnrSelf/Children() on imported elements.

	* NLTPolygonSet.cxx:
	* NLTPolygonSet.h:
	Fix search for duplicate polygons a little.

	* Track.cxx:
	* Track.h:
	Manage list of projected tracks so that it works in TrackCount.

	* Reve.cxx:
	Revert to gled-style check if function is loaded in cint.

2007-08-30  Matevz Tadel  <matevz.tadel@cern.ch>

	EVE-dev

	* TGFileBrowser.cxx:
	* TGFileBrowser.h:
	From Bertrand.
	Override ReallyDelete() so that browser is properly deregistered
	from root.

	* TGNewBrowser.cxx:
	* TGNewBrowser.h:
	From Bertrand.
	Move framework specific menus to the left menu-bar.

	* RGBrowser.cxx:
	Remove the 'Framework' popup on construction.
	Add 'Reve' popup to inherited member fMenuBar.
	Added 'New Text Editor' menu entry.

2007-08-29  Alja Mrak-Tadel  <Alja.Mrak.Tadel@cern.ch>

	EVE-dev

	* LinkDef.h:
        Register new class NLTSLineSet.

	* StraightLineSet.cxx:
	* StraightLineSet.h:
        Implement StraightLineSet projected class NLTSLineSet.

	* StraightLineSetGL.cxx:
	StraightLineSet inherits from TAttLine.

	* StraightLineSetEditor.cxx:
	Editor not friend class of model. Use Getters/Setters.

2007-08-29  Alja Mrak-Tadel  <Alja.Mrak.Tadel@cern.ch>

	EVE-dev

	* NLTProjectorEditor.cxx:
	ChangeTGNumberEntry length.

	* Track.cxx:
	* Track.h:
	Add function in Track to set line and marker attributes from TrackList.

2007-08-29  Matevz Tadel  <matevz.tadel@cern.ch>

	EVE-dev

	* TGClassBrowser.cxx:
	* TGClassBrowser.h:
	* TGCommandPlugin.cxx:
	* TGCommandPlugin.h:
	* TGFileBrowser.cxx:
	* TGFileBrowser.h:
	* TGNewBrowser.cxx:
	* TGNewBrowser.h:
	New files from Bertrand, somewhat hacked: prototype implementation
	of a new root browser.

	* LinkDef.h:
	Register new classes TGClassBrowser, TGCommandPlugin,
	TGFileBrowser and TGNewBrowser.

	* RGBrowser.cxx:
	* RGBrowser.h:
	Fix includes for the new-browser files (before they were in
	ROOTSYS/include).

2007-08-28  Alja Mrak-Tadel  <Alja.Mrak.Tadel@cern.ch>

	EVE-dev

	* GridStepperEditor.cxx:
	* GridStepperEditor.h:
        Configure GridStepper widgets.
	
	* NLTProjector.cxx:
        Remeve obsolete Signal/Slot call.
	
2007-08-28  Alja Mrak-Tadel  <Alja.Mrak.Tadel@cern.ch>

	EVE-dev

	* .SKEL-gedsubed.cxx:
	Change callback in sub-editor skeleton file.

	* GridStepperEditor.cxx:
	* GridStepperEditor.h:
	New class GridStepperEditor/GridStepperSubEditor.

	* LinkDef.h:
	Register new classes: GridStepperSubEditor and GridStepperEditor.

	* NLTProjectorEditor.cxx:
	Add tool-tip in TGComboBox.

2007-08-28  Matevz Tadel  <matevz.tadel@cern.ch>

	EVE-dev

	*es FrameBoxGL.cxx:
	Disable back-face culling if enabled.

	* RMacro.cxx:
	Revert back to gled-style checking if a macro is loaded. The
	Axel's method spits blood with latest cint.

2007-08-27  Alja Mrak-Tadel  <Alja.Mrak.Tadel@cern.ch>

	EVE-dev

	* QuadSetEditor.cxx:
	* QuadSetEditor.h:
	Create extra tab to show histograms.

	* RGBAPalette.cxx:
	* RGBAPalette.h:
	New function SetLimitsScaleMinMax(Int_t low, Int_t high).

2007-08-27  Matevz Tadel  <matevz.tadel@cern.ch>

	EVE-dev

	* RGTopFrame.cxx:
	Use gClient->GetRoot() for creation of embedded gl viewer.

	* RGValuators.cxx:
	During construction of label frame use fName instead of GetName(),
	which is used for saving gui into a macro.

	* TrackRnrStyleEditor.cxx:
	Fix labels, now that we can have spaces.

2007-08-27  Matevz Tadel  <matevz.tadel@cern.ch>

	EVE-dev

	* FrameBox.cxx:
	* FrameBox.h:
	* FrameBoxGL.cxx:
	Added option to render a filled-frame so that a client can be
	selected even by pressing into an empty area.

	* GridStepper.h:
	Added SetOs() to set origin.

	* RGEditor.cxx:
	* RGEditor.h:
	Implemented SetModel() from TGedEditor so that it can cross check
	if the edited object is a render element. This is needed when the
	model is set from somewhere else the reve, like TGLViewer.

	* ZTrans.cxx:
	* ZTrans.h:
	Added Float_t* versions of Get/SetPos().

2007-08-26  Alja Mrak-Tadel  <Alja.Mrak.Tadel@cern.ch>

	EVE-dev

	* NLTProjector.cxx:
	* NLTProjector.h:
	* NLTProjectorEditor.cxx:
	* NLTProjectorEditor.h:
	Add member fFixedRadius. It defines distance from center, where
	projected value is not dependent of distortion. Introduce z-depth
	which defines the z coordinate of projected points.

	* NLTBases.h:
	* PointSet.cxx:
	* NLTPolygonSet.cxx:
	* NLTPolygonSet.h:
	* NLTPolygonSetEditor.cxx:
	* NLTPolygonSetEditor.h:
	NLTProjected new member z-depth.

	* NLTTrack.cxx:
        Improve algorithm in GetBreakpoint().

	* PODs.h:
	Add function Vector::Set(const Vector& v).

2007-08-26  Matevz Tadel  <matevz.tadel@cern.ch>

	EVE-dev

	* RGTopFrame.cxx:
	* RGTopFrame.h:
	Added FullRedraw3D() forcing complete redraw of scenes and
	viewers.

	* Scene.cxx:
	* Scene.h:
	Added RepaintAllScenes().

	* Viewer.cxx:
	* Viewer.h:
	Added RepaintAllViewers().
	When camera reset is requested call viewer->PostSceneBuildSetup()
	instead of ResetCamerasAfterNextUpdate().

2007-08-26  Matevz Tadel  <matevz.tadel@cern.ch>

	EVE-dev

	* RenderElement.cxx:
	* RenderElement.h:
	Added new optional argument Bool_t redraw to ElementChanged().
	USe the above method consistently throughout the code.

2007-08-26  Matevz Tadel  <matevz.tadel@cern.ch>

	EVE-dev

	* NLTProjector.cxx:
	NLTProjection::GetValForScreenPos(): use projected values during
	calculation of inital bisection bounds.

	* PODs.cxx:
	* PODs.h:
	Added Vector::Mult(). Whitespace.

	* RGBrowser.cxx:
	* RGBrowser.h:
	RGLTEFrame: added functions ReconfToHorizontal/Vertical() and menu
	entry to invoke them.

	* RGTopFrame.cxx:
	* RGTopFrame.h:
	Added GetLTEFrame().
	Setup TGLSAViewer to edit external objects by default.
	At startup show editor of default viewer.

	* RenderElement.cxx:
	In RemoveFromListTrees() rewrite list-tree-item loop to avoid
	backward iteration during item removal.

	* Viewer.cxx:
	Setup TGLSAViewer to edit external objects by default.

2007-08-24  Alja Mrak-Tadel  <Alja.Mrak.Tadel@cern.ch>

	EVE-dev

	* NLTProjector.cxx:
	* NLTProjector.h:
	* NLTProjectorGL.cxx:
	* NLTProjectorGL.h:
	Improve algorithm for tick-mark positioning and configuration.

	* NLTProjectorEditor.cxx:
	* NLTProjectorEditor.h:
	Add widgets to configure scale info.

	* PODs.h:
	Add index operator to Vector class.

	* RenderElement.cxx:
	* RenderElement.h:
	Add GetRnrElName()/GetRnrElTitle() in RenderElement class.

2007-08-24  Matevz Tadel  <matevz.tadel@cern.ch>

	EVE-dev

	* LinkDef.h:
	Register new class NLTPointSetGL.

	* NLTPointSetGL.cxx:
	* NLTPointSetGL.h:
	New files: hack to disable display-lists for NLTPointSet (bug in
	fglrx driver, takes forever).

	* NLTProjector.cxx:
	Set fProjection = 0 after destruction.

	* .SKEL-gl.cxx:
	* NLTTrackGL.cxx:
	Fix a commented line for display-list disabling.

2007-08-24  Matevz Tadel  <matevz.tadel@cern.ch>

	EVE-dev

	* LinkDef.h:
	Register class RGLTEFrame.

	* RGBrowser.cxx:
	* RGBrowser.h:
	Subclass RGBrowser from TNewBrowser, add new class RGLTEFrame to
	encapsulate list-tree editor combo.
	This is a major change,	basically no code left unchanged.

	* RGEditor.cxx:
	* RGEditor.h:
	Added width, height ctor args.
	Use RenderElement::GetEditorObject() instead of GetObject().

	* RGTopFrame.cxx:
	* RGTopFrame.h:
	Removed inheritance from TGmainFrame, use RGBrowser as top-level
	GUI element. Whole initalization rewritten to reflect that.
	RGTopFrame class is now ripe to be renamed to Application, Manager
	or something similar.

	For consistency renamed ElementChanged() to RenderElementChanged().

	* RenderElement.cxx:
	* RenderElement.h:
	Added virtual GetEditorObject() that can return an alternate
	object to be edited when rnr-el is selected (eg. Viewer passes its
	TGLViewer).

	Added virtual CheckReferenceCount() (code taken from
	RemoveParent()) that is now also called from RemoveFromListTree()
	when a top-level list-tree-entry is removed.

	Replaced all calls gClient->NeedRedraw(listtree) with
	listtree->ClearViewPort() [changes in root].

	Added optional arguments Bool_t rnr_self/children to
	En/DisableListElements().

	* Reve.cxx:
	Moved mime-type init for RMacro from RGTopFrame to SetupGUI().

	* Scene.cxx:
	Report scene destruction to global viewer-list.

	* SceneInfo.cxx:
	* SceneInfo.h:
	Overrode AcceptRenderElement() and HandleElementPaste() to deny
	addition of elements.

	* Viewer.cxx:
	* Viewer.h:
	Viewer:	overrode GetEditorObject() to return fGLViewer.
	ViewerList: added SceneDestructing(Scene* scene) method to
	unregister a scene from all existing viewers.

	* GeoNode.cxx:
	Remove obsolete root-version ifdef.

	* VSDSelector.h:
	Add missing include.

2007-08-22  Alja Mrak-Tadel  <Alja.Mrak.Tadel@cern.ch>

	EVE-dev

	* NLTBases.cxx:
	* NLTBases.h:
	Implementation of NLTGeoProjectable class, to be a common base of
	GeoNode and GeoShapeRnrEl for non-linear projections.

	* GeoNode.cxx:
	* GeoNode.h:
	GeoShapeRnrEl inherited from NLTGeoProjectable class.

	* LinkDef.h:
	Register new class NLTGeoProjectable.

	* NLTPolygonSet.cxx:
	* NLTPolygonSet.h:
	* NLTProjector.cxx:
	* NLTProjector.h:
        Non-linear transformation of TBuffer3D moved in NLTPolygonSet.

	* NLTPolygonSetGL.cxx:
	NLTPolygons in NLTPolygonSet stored in std::list.

	* NLTProjectorEditor.cxx:
	Use NLTProjector Getters and Setters.

	* NLTTrack.h:
	Remove PrintLineSegments() from popup menu.

	* NLTTrack.cxx:
	In UpdateProjection disable recursive behavior. Recursive calls
	already done by NLTProjector.

2007-08-21  Alja Mrak-Tadel  <Alja.Mrak.Tadel@cern.ch>

	EVE-dev

	* GLUtilNS.cxx:
	* GLUtilNS.h:
	* LineGL.cxx:
	Add function RenderLine() to draw a float array with given
	TAttLine. In RenderCorsses() and RenderPoints() fix bug => leave
	second argument to point to the same location.

	* TrackGL.cxx:
        Use GLUtilNS::RenderLine(). Do check of PathMarks boundaries in
	DirectDraw().

	* Track.cxx:
	* Track.h:
	TrackList and Track become NLTProjectable classes. In Track remove
	vector fVisPathMarks. It was unnecessary, since fPathMarks have
	the required data.

	* LinkDef.h:
	Register new classes NLTTrack, NLTTrackGL, NLTTrackList.

	* NLTTrack.cxx:
	* NLTTrack.h:
	* NLTTrackGL.cxx:
	* NLTTrackGL.h:
	New files: new classes for management and rendering of projected
	tracks.

	* NLTProjector.cxx:
	* NLTProjector.h:
	Remove obsolete management for PointSet and Track. Fix bug in RhoZ::AcceptSegment().

	* TrackRnrStyleEditor.cxx:
	Fix interval in fMaxOrbits RGValuator.

2007-08-20  Matevz Tadel  <matevz.tadel@cern.ch>

	EVE-dev

	* NLTProjector.cxx:
	* NLTProjector.h:
	* Viewer.cxx:
	* Viewer.h:
	Method HandleElementPaste() now returns Bool_t.

	* NLTProjector.cxx:
	Use new method CollectSceneParentsFromChildren() to optimize
	update of all related scenes.

	* RGBrowser.cxx:
	* RGBrowser.h:
	Conform to convention that change initiator is responsible for
	calling redraw. Added method ItemChecked() to act as a mediator to
	gReve.

	* RGTopFrame.cxx:
	* RGTopFrame.h:
	* RenderElement.cxx:
	* RenderElement.h:
	Added method CollectSceneParentsFromChildren().
	Changed return value of HandleElementPaste() from void to Bool_t.
	Renamed Changed() to ElementChanged().

	* TriangleSet.cxx:
	Fixed gcc-4 warnings.

2007-08-20  Matevz Tadel  <matevz.tadel@cern.ch>

	EVE-dev

	* RGBrowser.cxx:
	* RGBrowser.h:
	Added handling of key-presses in list-tree; in particular delete
	key removes render element from specific parent.

	* RGTopFrame.cxx:
	RemoveRenderElement now properly untangles the element from all
	list-trees.

	* RenderElement.cxx:
	* RenderElement.h:
	Implemented RemoveFromListTrees(RenderElement* parent) that
	removes items from all list trees where parent is equal to the one
	passed as argument.

2007-08-20  Matevz Tadel  <matevz.tadel@cern.ch>

	EVE-dev

	* NLTProjector.cxx:
	* NLTProjector.h:
	Bind element-paste to ImportElements.
	Prefix imported render-element names with "NLT ".

	* PointSet.cxx:
	* PointSet.h:
	Implemented virtual ComputeBBox() to enforce minimal bounding-box
	size.

	* RGBrowser.cxx:
	* RGBrowser.h:
	* RGTopFrame.cxx:
	* RGTopFrame.h:
	Removed obsolete code for "classic-look".

2007-08-19  Matevz Tadel  <matevz.tadel@cern.ch>

	EVE-dev

	* LinkDef.h:
	Register new class NLTProjectorEditor.

	* NLTProjector.cxx:
	* NLTProjector.h:
	Added methods for (recursive) import and update of projected
	elements.

	* NLTProjectorEditor.cxx:
	* NLTProjectorEditor.h:
	New files, editor class for NLTProjection.

	* PointSet.cxx:
	* PointSet.h:
	PointSet: implemented virtual SetRnrElNameTitle();
	NLTPointSet: implemented virtual SetProjection().

	* RenderElement.cxx:
	* RenderElement.h:
	Added virtual functions SetRnrElNameTitle() and Changed().

2007-08-19  Matevz Tadel  <matevz.tadel@cern.ch>

	EVE-dev

	* FrameBoxGL.h:
	* NLTProjector.cxx:
	* NLTProjector.h:
	Fix gcc-4 warnings.

	* LinkDef.h:
	Register new classes NLTProjectable, NLTProjected and NLTPointSet.

	* NLTBases.cxx:
	* NLTBases.h:
	New files: new abstract bases NLTProjectable and NLTProjected.

	* PointSet.cxx:
	* PointSet.h:
	New class NLTPointSet; add NLTProjectable as a base of PointSet.

	* RGBrowser.cxx:
	Resize widgets to obtain resonable starting size.

2007-08-19  Matevz Tadel  <matevz.tadel@cern.ch>

	EVE-dev

	* RGTopFrame.cxx:
	* RGTopFrame.h:
	Default start-up mode now embedded gl viewer;
	added function SpawnNewScene().

2007-08-18  Alja Mrak-Tadel  <Alja.Mrak.Tadel@cern.ch>

	EVE-dev

	* LinkDef.h:
	Registere new classes TrackEditor, TrackRnrStyleEditor and
	TrackRnrStyleSubEditor.

	* Track.cxx:
	* Track.h:
	* TrackEditors.cxx:
	* TrackEditors.h:
	* TrackGL.cxx:
	* TrackRnrStyleEditor.cxx:
	* TrackRnrStyleEditor.h:
	Configuration of track rendering has two sources. First is done by
	TrackRnrStyle which can be shared. Second type of configuration
	goes via TrackList container, a RenderElement parent of a track.

	TrackList handles only track line attributes. These attributes are
	set recursively by default. The remaining configuration is dane
	with referenced TrackRnrStyle.

	* GLUtilNS.cxx:
	* GLUtilNS.h:
	Change argument TAttMatker& in RenderPoints(), RenderCrosses() and
	RenderPolymarkers() to const TAttMatker&.

	* LineEditor.cxx:
	Put checkbox fRnrMarkers before checkbox fRnrLine.

	* Cascade.cxx:
	* V0.cxx:
	* VSDSelector.cxx:
	* NLTProjector.cxx:
	Set line color in tracks to TrackList main color. Remove call
	MakeMarkers(). Rendering of fist vertex is done in
	TrackGL::DirectDraw().

2007-08-18  Matevz Tadel  <matevz.tadel@cern.ch>

	EVE-dev

	* RenderElement.cxx:
	* RenderElement.h:
	Added virtual HandleElementPaste(RenderElement* el) that is called
	on mouse-paste into list-tree-item representing the element.

	* Viewer.cxx:
	* Viewer.h:
	Override HandleElementPaste() to try and add a scene to the viewer.

	* RGTopFrame.cxx:
	* RGTopFrame.h:
	Added methods RenderElementSelect/Paste().

	* RGBrowser.cxx:
	In ItemClicked also check for middle button.

	* RGEditor.cxx:
	* RGEditor.h:
	Added new state data-memebr to cross-check if fRenderElement is
	still correct;
	hack to set priority of TAttMArkerEditor to one.

2007-08-17  Matevz Tadel  <matevz.tadel@cern.ch>

	EVE-dev

	* EventBase.cxx:
	* EventBase.h:
	Subclass directly from RenderElementList instead of PadPrimitive.

	* Pad.cxx:
	* Pad.h:
	Override virtuals IsBatch(), Update() and GetViewer3D() to allow
	Reve::Pad - GLViewer link to survive without a canvas.

	* RGBrowser.cxx:
	* RGBrowser.h:
	Removed all usage of pad during construction of editor and
	gl-viewer.

	* RGEditor.cxx:
	* RGEditor.h:
	In Update() propagate the change to gReve so that it can deduce
	which scenes need to be repainted. GUI size change.

	* RGTopFrame.cxx:
	* RGTopFrame.h:
	Major restructuring of basic state representation: use new
	Viewer/Scene classes to allow many simoultaneous GL-viewers with
	shared scenes; update mechanism changed accordingly.

	* RenderElement.cxx:
	* RenderElement.h:
	Added virtual CollectSceneParents() for update steering;
	generalized methods for adding elements into list-trees; removed
	obsolete class PadPrimitive.

	* Scene.cxx:
	* Scene.h:
	* SceneInfo.cxx:
	* SceneInfo.h:
	* Viewer.cxx:
	* Viewer.h:
	New files implementing classes for representation of
	GL-viewer/scene classes in Reve.

	* LinkDef.h:
	Register new classes Scene, SceneList, SceneInfo, Viewer and
	ViewerList; remove PadPrimitive.

	* VSDSelector.cxx:
	Removed obsolete protection of gPad.

2007-08-13  Matevz Tadel  <matevz.tadel@cern.ch>

	EVE-dev

	* GeoNode.cxx:
	* NLTProjector.cxx:
	* PointSet.cxx:
	* RGTopFrame.cxx:
	* RGTopFrame.h:
	* VSDSelector.cxx:
	Consistent ordering of arguments to AddRenderElement(),
	AddGlobalRenderElement() and RemoveRenderElement().

2007-08-09  Alja Mrak-Tadel  <Alja.Mrak.Tadel@cern.ch>

	EVE-dev

	* GLUtilNS.cxx:
	* GLUtilNS.h:
	* StraightLineSetGL.cxx:
	In RederPolymarkers()/RederCorssess()/RederPoints() argument
	sec_sel has default value false. RenderPolyMarkers() now also
	applies color from TAttMarker.

	* Track.cxx:
	* Track.h:
	* TrackGL.cxx:
	MakeTrack()/MakeTracks() are recursive by default.

	* LinkDef.h:
	* NLTProjectorGL.h:
	* NLTProjectorGL.cxx:
	New files.
	Draw axis to define bounding box of non-linear projected geometry.

	* NLTProjector.cxx:
	* NLTProjector.h:
	Fix inconsistent checking of polygon duplicates. Enable dynamic
	configuration of TrackRenderStyle.

	* ZTrans.cxx:
	* ZTrans.h:
	Add multiply functions with Double_t* as an argument.

	* NLTPolygonSet.cxx:
	* NLTPolygonSet.h:
	* NLTPolygonSetGL.cxx:
	 NLTPolygonSetGL inherited from RenderElementList. Add Getters for
	vertices and polygons.

	* NLTPolygonSetEditor.cxx:
	* NLTPolygonSetEditor.h:
	Edit transparency of main color.

2007-07-23  Matevz Tadel  <matevz.tadel@cern.ch>

	* Track.h:
	* TrackGL.cxx:
	Whitespace.

	* MCHelixLine.hi:
	* Track.cxx:
	Set limit on number of steps in track extrapolation.

2007-07-19  Matevz Tadel  <matevz.tadel@cern.ch>

	* RGBrowser.cxx:
	From Bertrand: improve setup of single-window mode so that it
	works on windows, too.

2007-07-10  Matevz Tadel  <matevz.tadel@cern.ch>

	* CascadeEditors.cxx:
	* Reve.cxx:
	* Track.cxx:
	* V0Editors.cxx:
	From Bertrand: windows fixes.

	* TriangleSet.cxx:
	* TriangleSet.h:
	From Bertrand: windows fixes, added transparency.

2007-07-02  Matevz Tadel  <matevz.tadel@cern.ch>

	* .SKEL-gl.cxx:
	* .SKEL-gl.h:
	* BoxSetGL.cxx:
	* BoxSetGL.h:
	* FrameBoxGL.cxx:
	* GLUtilNS.cxx:
	* GLUtilNS.h:
	* LineGL.cxx:
	* LineGL.h:
	* NLTPolygonSetGL.cxx:
	* NLTPolygonSetGL.h:
	* QuadSetGL.cxx:
	* QuadSetGL.h:
	* StraightLineSetGL.cxx:
	* StraightLineSetGL.h:
	* TrackGL.cxx:
	* TrackGL.h:
	* TriangleSetGL.cxx:
	* TriangleSetGL.h:
	Follow-up on gl/ changes introduced in ROOT-5.16.

	* RMacro.cxx:
	* RMacro.h:
	Migrate to the new signature of TMacro::Exec.

	* GeoNode.cxx:
	* GridStepper.cxx:
	* NLTPolygonSet.cxx:
	* NLTPolygonSet.h:
	* NLTProjector.cxx:
	* PODs.h:
	* QuadSet.cxx:
	* QuadSet.h:
	Fix effc++ warnings.

	* RGTopFrame.cxx:
	Remove unnecessary includes.

	* Reve.cxx:
	* TrackEditors.cxx:
	Add includes needed due to changes in ROOT.

	* Makefile:
	Link also against libFTGL.

2007-06-18  Matevz Tadel  <matevz.tadel@cern.ch>

	* StraightLineSet.cxx:
	* StraightLineSet.h:
	White-space.

	* StraightLineSetGL.cxx:
	Bugfix; wrong size passed to marker renderer.

2007-05-30  Alja Mrak-Tadel  <Alja.Mrak.Tadel@cern.ch>

	* LinkDef.h:
	* NLTPolygonSet.cxx:
	* NLTPolygonSet.h:
	* NLTPolygonSetEditor.cxx:
	* NLTPolygonSetEditor.h:
	* NLTPolygonSetGL.cxx:
	* NLTPolygonSetGL.h:
	* NLTProjector.cxx:
	* NLTProjector.h:
        New files for non-linear projections. FishEye and RhoZ
	projections are implemeted with NLTProjection::fDistortion value
	varying from 0. to 0.001. NLTProjector functions ProjectGeoShape(),
	ProjectPointSet() and ProjectTrackList() are used to build non-linear
	projected scene with detector geometry, hits and tracks.

	* PODs.h:
        New functions in Vector class.

	* Track.cxx:
	* Track.h:
	* TrackEditors.cxx:
	* TrackEditors.h:
	Enable line style modification in TrackList/TrackListEditor.

2007-05-24  Alja Mrak-Tadel  <Alja.Mrak.Tadel@cern.ch>

	* RGTopFrame.cxx:
	Fix palette handling according to new TColorWheel.

2007-04-19  Alja Mrak-Tadel  <Alja.Mrak.Tadel@cern.ch>

	* GeoNode.cxx:
	* GeoNode.h:
	* RGeoNodeEditors.cxx:
	Map SetRnrSelf and SetRnrChildren to node visibility and to node
	daughters visibility.

2007-04-19  Matevz Tadel  <matevz.tadel@cern.ch>

	* GeoNode.cxx:
	Do not transpose rotation part of geo-shape-extract transformation.

	* ZTrans.cxx:
	Transpose rotation part when copying data to TBuffer3D (as it is
	transposed again in TGLPhysicalShape ctor).

2007-04-18  Matevz Tadel  <matevz.tadel@cern.ch>

	* QuadSet.cxx:
	* QuadSet.h:
	* QuadSetEditor.cxx:
	* QuadSetEditor.h:
	Add support for creation/display of quad-value histograms.

	* RGBAPalette.cxx:
	* RGBAPalette.h:
	Added limit-getters, in ctor set limits to match min/max values.

2007-04-17  Matevz Tadel  <matevz.tadel@cern.ch>

	* QuadSet.cxx:
	* QuadSet.h:
	* QuadSetGL.cxx:
	Add support for all variations of y-z plane rectangles.

2007-04-17  Matevz Tadel  <matevz.tadel@cern.ch>

	* Track.cxx:
	Bogdan: fix calculation of squared momentum.

2007-04-11  Alja Mrak-Tadel  <Alja.Mrak.Tadel@cern.ch>

	* StraightLineSet.cxx:
	* StraightLineSet.h:
	* StraightLineSetEditor.cxx:
	* StraightLineSetEditor.h:
	* StraightLineSetGL.cxx:
	* StraightLineSetGL.h:
	New class StraightLineSet with accompanying GL and Editor classes.

	* LinkDef.h:
	Register new StraightLineSetXyzz classes.

	* GLUtilNS.h:
	* GLUtilNS.cxx:
	Add a function to render polymarkers from float array and
	TAttMarker.

	* RGTopFrame.cxx:
	* RenderElement.cxx:
	* RenderElement.h:
	Reimplement callback of the Checked() signal from
	RGBrowser::fListTree; function in RenderElement renamed from
	ToggleRnrState to SetRnrState.

2007-04-11  Matevz Tadel  <matevz.tadel@cern.ch>

	* FrameBox.cxx:
	* FrameBox.h:
	Added setup function SetAABoxCenterHalfSize().

2007-04-10  Matevz Tadel  <matevz.tadel@cern.ch>

	* Track.cxx:
	* Track.h:
	Make Track::MakeTrack() virtual; Bogdan: add
	TrackList::SelectByP() and supporting variables.

	* TrackEditors.cxx:
	* TrackEditors.h:
	Bogdan: add controls for TrackList::SelectByP().

2007-03-25  Alja Mrak-Tadel  <Alja.Mrak.Tadel@cern.ch>

	* GLTextNS.cxx:
	* GLTextNS.h:
	New namespace GLTextNS: produce text using texture maps.

	* GLUtilNS.h:
	Helper classes/functions for GL state handling.

2007-03-25  Matevz Tadel  <matevz.tadel@cern.ch>

	* Track.cxx:
	* Track.h:
	Improve handling of multi-level track containers for kinematic
	trees.

2007-03-24  Matevz Tadel  <matevz.tadel@cern.ch>

	* RenderElement.h:
	* RenderElementEditor.cxx:
	* RenderElementEditor.h:
	Add virtual interface allowing sub-classes to request editor for
	transparency and transformation-matrix via RenderElement.

	* ZTrans.cxx:
	* ZTrans.h:
	Added method SetGeoHMatrix(), initializing TGeoHMatrix from
	ZTrans.

	* GeoNode.cxx:
	* GeoNode.h:
	Use transparency/transf-matrix service from RenderElement for
	classes GeoTopNodeRnrEl and GeoShapeRnrEl; use ZTrans for storage
	of transforamtion matrix in class GeoTopNodeRnrEl.

	* RGeoNodeEditors.cxx:
	Removed unneeded widget association.

2007-03-21  Alja Mrak-Tadel  <Alja.Mrak.Tadel@cern.ch>

	* QuadSet.h:
	Add getter for fValueIsColor.

2007-03-22  Matevz Tadel  <matevz.tadel@cern.ch>

	* TGeoShapeExtract.cxx:
	* TGeoShapeExtract.h:
	New files: class TGeoShapeExtract that allows import of exact
	image of geometry as exported from gled.

	* GeoNode.cxx:
	* GeoNode.h:
	* LinkDef.h:
	New classes TGeoShapeExtract and Reve::GeoShapeRnrEl.

	* RGBrowser.cxx:
	Disable ROOT's auto-update of TGListTree's checkboxes.

	* RenderElement.cxx:
	Setup check-box pictures when inserting in a list-tree.

	* Track.h:
	Fix typo, swap of R/Z.

	* ZTrans.cxx:
	* ZTrans.h:
	Add ctors/setters from float/double arrays.

	* ZTransEditor.cxx:
	Align position, rotation and scale widgets.

	* QuadSet.cxx:
	* QuadSetGL.cxx:
	* TrackEditors.cxx:
	White-space.

2007-03-15  Alja Mrak-Tadel  <Alja.Mrak.Tadel@cern.ch>

	* GridStepper.h:
	* GridStepper.cxx:
	* LinkDef.h:
	New class GridStepper.

	* QuadSet.cxx:
	Check ownership of quad-ids in Reset().

2007-03-15  Matevz Tadel  <matevz.tadel@cern.ch>

	* RGTopFrame.cxx:
	* RGTopFrame.h:
	Add an optional flag to Redraw3D() issuing a request for dropping
	of logical-shapes on this redraw (temporary hack until we get new
	gl stuff and can do it right). Fix in RemoveRenderElement() where
	wrong argument was used when unregistering the item from the
	browser.

2007-03-08  Alja Mrak-Tadel  <Alja.Mrak.Tadel@cern.ch>

	* Track.cxx:
	* Track.h:
	Added method SortPathMarksByTime().

	* TrackGL.cxx:
	Fix for checking boundaries of path-marks.

2007-03-08  Matevz Tadel  <matevz.tadel@cern.ch>

	* Track.cxx:
	Missing initialization; fiddle with the track marker-style a bit
	more.

2007-03-06  Matevz Tadel  <matevz.tadel@cern.ch>

	* RenderElement.cxx:
	In PadPrimitive::Paint() test fRnrChildren instead of fRnrSelf.
	Some formatting changes while searching for the above bug.

2007-03-04  Alja Mrak-Tadel  <Alja.Mrak.Tadel@cern.ch>

	* RenderElement.cxx:
	* RenderElement.h:
	* LinkDef.h:
	Classes RenderElement and RenderElementListBase have been merged,
	RenderElementListBase class is removed.

	Since RenderElement supports hierarchical structure fRnrElement is
	replaced to fRnrSelf and fRnrChildren. RnrSelf/RnrDaughters
	callbacks from editor set check box picture according to the for
	possible states.

	New class PadPrimitve. Objects of the classes enable recursive
	rendering  as they are added in TPad fListOfPrimitives.

	* RGTopFrame.cxx:
	* RGTopFrame.h:
	Changes from RenderElement. Added Bool_t fKeepEmptyCont
	determining behaviour of zero-count rnr-element imports.

	* Reve.cxx:
	* Reve.h:
	Added function to create 4 check box pictures which mark fRnrSelf
	and fRnrChildren state of RenderElement.

	* EventBase.cxx:
	* EventBase.h:
	Inherit from PadPrimitve instead of from RenderElementList.

	* RenderElementEditor.cxx:
	* RenderElementEditor.h:
	* GeoNode.cxx:
	* GeoNode.h:
	* Cascade.cxx:
	* Cascade.h:
	* PointSet.cxx:
	* PointSet.h:
	* V0.cxx:
	* V0.h:
	* RGBrowser.cxx:
	Changes from RenderElement.

	* Track.cxx:
	* Track.h:
	Changes from RenderElement; change import functions to
	add hits, clusters, kinematic to selected object.

2007-02-26  Matevz Tadel  <matevz.tadel@cern.ch>

	* Track.cxx:
	* Track.h:
	In class Track: renamed ImportDaughters() to ImportKine(), added
	ImportKineWithArgs(), both accessible from ctx-menu.

2007-02-26  Alja Mrak-Tadel  <Alja.Mrak.Tadel@cern.ch>

	* Track.cxx:
	* Track.h:
	* TrackEditors.cxx:
	TrackRnrStyle: add pt-range memebers.

2007-02-21  Alja Mrak-Tadel  <Alja.Mrak.Tadel@cern.ch>

	* PODs.cxx:
	* PODs.h:
	Add function to return PathMark type-name.

	* RenderElement.cxx:
	Call redraw after Enable/DisableListElements.

	* Track.cxx:
	* Track.h:
	Two new items for context menu: PrintPathMarks and
	ImportDaughters.

	* TrackGL.cxx:
	Make consistent alignment.

2007-02-20  Matevz Tadel  <matevz.tadel@cern.ch>

	* Cascade.cxx:
	* Cascade.h:
	* V0.cxx:
	* V0.h:
	Fix Ludovic's strange const-method syntax.

2007-02-19  Alja Mrak-Tadel  <Alja.Mrak.Tadel@cern.ch>

	* PODs.h:
	Add member time to class PathMark. Set values in enum
	PathMark::Type_e.

	* Track.cxx:
	Add callbacks to set path marks. In Track::MakeTrack() implement
	fitting of track references and daughter particles.

	* Track.h:
	Add Getters and Setters in TrackRnrStyle and TrackList to define
	rendering of path marks.

	* TrackEditors.cxx:
	* TrackEditors.h:
	Add widgets to control rendering and fiting of pathmarks.

	* TrackGL.cxx:
	* TrackGL.h:
	Override LineGL::DirectDraw() to draw path marks.

2007-01-19  Matevz Tadel  <matevz.tadel@cern.ch>

	* RGTopFrame.h:
	Added nested class RedrawDisabler allowing exception-safe
	disabling of 3d-redraw.

2007-01-17  Matevz Tadel  <matevz.tadel@cern.ch>

	* TrackEditors.cxx:
	* TrackEditors.h:
	TrackCounterEditor: add number-entry to directly set the event
	number.

2007-01-12  Matevz Tadel  <matevz.tadel@cern.ch>

	* Track.cxx:
	* Track.h:
	TrackCounter: added method OutputEventTracks() for storing
	scanning results.

	* TrackEditors.cxx:
	* TrackEditors.h:
	TrackCounterEditor: added buttons to print/file scanning results
	and to display current histograms.

2006-12-19  Matevz Tadel  <matevz.tadel@cern.ch>

	* Track.cxx:
	* Track.h:
	Added method Track::PrintKineStack(); added global TrackCounter
	pointer to overcome resets of CINT globals in macros.

2006-12-18  Matevz Tadel  <matevz.tadel@cern.ch>

	* FrameBox.h:
	Added getters for frame-point details.

	* QuadSet.cxx:
	If frame-box is set, use it for determination of bounding-box.

2006-12-15  Matevz Tadel  <matevz.tadel@cern.ch>

	* FrameBox.h:
	Subclass from ReferenceBackPtr instead of ReferenceCount.

	* RenderElement.cxx:
	* RenderElement.h:
	* Reve.cxx:
	* Reve.h:
	* LinkDef.h:
	Moved declaration/definition of ReferenceBackPtr from
	RenderElement.h/cxx to Reve.h/cxx.

	* PODs.h:
	Added index data-member to MC/RecTrack.

	* QuadSet.cxx:
	* QuadSet.h:
	Added signal-emitting 'void CtrlClicked()' and 'Bool_t
	fEmitSignals' that controls if signals are emitted on secondary
	selection hit.
	Fixed handling of main-color which is in fact
	forwarded to shared frame.

	* Track.cxx:
	* Track.h:
	Added method 'void ImportClustersFromIndex()' and data-member
	'Int_t fIndex'.

	* TrackEditors.cxx:
	Increase range of track extrapolation precision.

2006-12-13  Matevz Tadel  <matevz.tadel@cern.ch>

	* QuadSet.cxx:
	* QuadSet.h:
	Added per-quad TRef, implemented virtual callback QuadSelected()
	for secondary selection from GL.

	* QuadSetGL.cxx:
	* QuadSetGL.h:
	Added support for secondary selection. Sacrificed some speed for
	simplicity / clarity.

2006-12-08  Matevz Tadel  <matevz.tadel@cern.ch>

	* LinkDef.h:
	* Plex.h:
	Added inner struct VoidCPlex::iterator; increase constness.

	* QuadSet.cxx:
	* QuadSet.h:
	* QuadSetGL.cxx:
	Slight simplification of heavy-duty loops over elements.

2006-12-06  Matevz Tadel  <matevz.tadel@cern.ch>

	* QuadSet.cxx:
	* QuadSet.h:
	* QuadSetGL.cxx:
	* QuadSetGL.h:
	Added support for rendering hexagons (needed by PMD).

2006-12-04  Matevz Tadel  <matevz.tadel@cern.ch>

	* RenderElement.cxx:
	* RenderElement.h:
	Renamed typedef lpRE_t/i to List_t/i.
	Added method groups Begin/End/GetN-Parents/Children().

	* Cascade.cxx:
	* GeoNode.cxx:
	* PointSet.cxx:
	* V0.cxx:
	Renamed typedef lpRE_t/i to List_t/i.

	* LinkDef.h:
	New class TrackCounter[Editor]; added RenderElement typedefs.

	* QuadSetGL.cxx:
	Render frame before checking if QuadSet is empty and exiting.

	* RMacro.cxx:
	* RMacro.h:
	Added a hack that restores CINT state if macro execution ends with
	an exception.

	* Track.cxx:
	* Track.h:
	Added class TrackCounter;
	Track now inherits from TQObject and emits a Clicked() signal;
	Renamed typedef lpRE_t/i to List_t/i.

	* TrackEditors.cxx:
	* TrackEditors.h:
	Added class TrackCounterEditor.

	* TrackGL.cxx:
	In TrackGL::ProcessSelection(): make model-track emit Clicked signal.

2006-11-21  Matevz Tadel  <matevz.tadel@cern.ch>

	* Line.cxx:
	* Line.h:
	* LineEditor.cxx:
	* LineEditor.h:
	* LineGL.cxx:
	* LineGL.h:
	New files: line representation with per-point selection.

	* TrackGL.cxx:
	* TrackGL.h:
	New files: allow interaction with the track, more configurability
	(render as line, points or both).

	* Track.cxx:
	* Track.h:
	Derive Track from Line (before was TPolyLine3D, RenderElement);
	this allowed me to remove a lot of code actually shared with
	PointSet.

	* LinkDef.h:
	Register new classes.

	* MCHelixLine.hi:
	Some points were duplicated during track construction.

	* QuadSet.cxx:
	* QuadSet.h:
	* QuadSetEditor.cxx:
	* QuadSetGL.cxx:
	* QuadSetGL.h:
	Use better names for QuadTypes (enum and internal structs).

	* PointSet.h:
	* TTreeTools.h:
	Style/comment changes.

2006-11-17  Matevz Tadel  <matevz.tadel@cern.ch>

	* RGBAPalette.cxx:
	* RGBAPalette.h:
	Removed unnecessary constructor.

2006-11-17  Matevz Tadel  <matevz.tadel@cern.ch>

	* QuadSetGL.cxx:
	Bugfix: loop variable was not increased in case of a continue
	statement.

	* RGBAPalette.cxx:
	* RGBAPalette.h:
	Rename over/undershoot to over/underflow.

	* RGBAPaletteEditor.cxx:
	* RGBAPaletteEditor.h:
	Beautify editor; rename over/undershoot to over/underflow.

2006-11-16  Matevz Tadel  <matevz.tadel@cern.ch>

	* Cascade.cxx:
	* Cascade.h:
	* CascadeEditors.cxx:
	* CascadeEditors.h:
	From Ludovic, new files for visualization of cascades.

	* LinkDef.h:
	From Ludovic: register new classes. Reorganize some entries so
	that a class, editor and gl-renderer are listed together.

	* V0.cxx:
	* V0Editors.cxx:
	* V0Editors.h:
	From Ludovic: updates for V0 visualization.

	* QuadSet.cxx:
	* QuadSet.h:
	Main color now set from frame-box (instead of default palette
	color).

	* QuadSetGL.cxx:
	Use new color-query function from RGBAPalette; validity of digit
	value was not honoured in line-drawing modes.

	* RGBAPalette.cxx:
	* RGBAPalette.h:
	* RGBAPaletteEditor.cxx:
	* RGBAPaletteEditor.h:
	Reimplementation of over/undershoot handling with separate modes
	for both ends (cut, mark, clip and wrap); this works marvelously.

	* QuadSetEditor.cxx:
	* QuadSetEditor.h:
	New files, editor for QuadSet gluing together translation and
	palette sub-editors.

	* RGValuators.cxx:
	* RGValuators.h:
	Added int version of SetLimits for RGDoubleValuator; added
	getters for value limits (Ludovic).

	* Plex.cxx:
	* TriangleSet.cxx:
	Added some comments.

2006-11-14  Matevz Tadel  <matevz.tadel@cern.ch>

	* BoxSet.cxx:
	* BoxSetGL.h:
	* QuadSet.cxx:
	* QuadSet.h:
	* QuadSetGL.h:
	* RGBAPalette.cxx:
	* RGBAPaletteEditor.cxx:
	* RGEditor.cxx:
	* RGEditor.h:
	* RGValuators.h:
	* RenderElement.cxx:
	* RenderElement.h:
	* TriangleSet.cxx:
	* TriangleSet.h:
	* ZTrans.cxx:
	* ZTrans.h:
	* ZTransEditor.cxx:
	* ZTransEditor.h:
	Fix effc++ warnings.

2006-11-14  Matevz Tadel  <matevz.tadel@cern.ch>

	* RGValuators.h:
	Added getters for limits of the RGValuator.

2006-11-14  Matevz Tadel  <matevz.tadel@cern.ch>

	* BoxSet.cxx:
	Removed support for old ROOT versions.

	* RenderElement.cxx:
	* RenderElement.h:
	Added base-interface ReferenceBackPtr (reference-counted object
	with back references to render elements); to be used for shared
	markup classes (color-palettes, frames) that need to update their
	consumers once their state is changed.

	* Reve.cxx:
	* Reve.h:
	Removed code for RGBAPalette; now in its own file.

	* TrackEditors.cxx:
	* TrackEditors.h:
	Cleaned-up by using RGValuators instead of raw ROOT GUI (partial).

	* QuadSet.cxx:
	* QuadSet.h:
	* QuadSetGL.cxx:
	* QuadSetGL.h:
	Very optimized in sense of speed / memory usage as it supports
	several orientations of rectangles and all possible variants of
	default sizes / third coordinate; also added pointers to
	color-palette and frame-box/rectangle so that these elements can
	be shared among instances of the same type (eg. silicon strip
	detectors). Means more code in this class ... but hopefully much
	less code elsewhere.

	* LinkDef.h:
	Register new classes FrameBox, Plex, RGBAPalette and V0 stuff.

	* FrameBox.cxx:
	* FrameBox.h:
	* FrameBoxGL.cxx:
	* FrameBoxGL.h:
	New files: provide a surrounding box/rectangle with a given
	size/color; can be shared among many instances of render-elements
	(eg. silicon strip detectors).

	* Plex.cxx:
	* Plex.h:
	New files: container with chunked memory allocation (to avoid
	frequent re-allocation on creation time) and ability to refit
	itself into a contiguous array.

	* RGBAPalette.cxx:
	* RGBAPalette.h:
	* RGBAPaletteEditor.cxx:
	* RGBAPaletteEditor.h:
	New files: a generic color palette with value to color mapping; to
	be used by most digit/raw-data classes; can be shared among many
	instances of render-elements (eg. silicon strip detectors).

	* V0.cxx:
	* V0.h:
	* V0Editors.cxx:
	* V0Editors.h:
	From Ludovic: new files for visualization of V0s.

	* RenderElementEditor.cxx:
	* TriangleSet.cxx:
	Formatting changes.

2006-10-31  Matevz Tadel  <matevz.tadel@cern.ch>

	* LinkDef.h:
	* QuadSet.cxx:
	* QuadSet.h:
	* QuadSetGL.cxx:
	* QuadSetGL.h:
	Started to work on reimplementation of the quad-set, renamed the
	old one to OldQuadSet; i'm checking this in because another change is
	needed for the new muon code and i already changed several things.

2006-10-27  Matevz Tadel  <matevz.tadel@cern.ch>

	* BoxSetGL.cxx:
	* BoxSetGL.h:
	In Line render-mode really render boxes as lines to allow
	selection to proceed through the box walls; removed pre-processor
	ifs for old root version.

2006-10-26  Matevz Tadel  <matevz.tadel@cern.ch>

	* Reve.cxx:
	Fixed operator+ functions for exceptions (forgot to change them
	when migrated from std::string to TString as exception base-class).

2006-10-25  Matevz Tadel  <matevz.tadel@cern.ch>

	* BoxSet.cxx:
	* BoxSet.h:
	Changed inheritance to include Reve::RenderElement;
	use ZTrans to store transformation matrix;
	added render-mode state (to force line/fill drawing).

	In class Box added ctor and function MakeAxisAlignedBox() to
	facilitate creation of regular boxes.

	* BoxSetGL.cxx:
	Support different render modes.

	* LinkDef.h:
	* Reve.cxx:
	* Reve.h:
	New class Reve::RGBAPalette: allow easier creation of color
	paletts mapped to integer-value range.

	* Track.cxx:
	* Track.h:
	* TrackEditors.cxx:
	* TrackEditors.h:
	Added parameter 'Width_t fWidth' to TrackRnrStyle and a method to
	change width of all tracks in TrackList.

	* TriangleSet.cxx:
	* TriangleSet.h:
	Added method method GenerateZNormalColors() that uses
	Reve::RGBAPalette to set-up triangle color based on z-component of
	the normal.

2006-10-18  Matevz Tadel  <matevz.tadel@cern.ch>

	* ZTrans.cxx:
	* ZTrans.h:
	* ZTransEditor.cxx:
	* ZTransEditor.h:
	New files: implementation of homogeneous transformation matrix
	with accompanying geditor.

	* TriangleSet.cxx:
	* TriangleSet.h:
	* TriangleSetEditor.cxx:
	* TriangleSetEditor.h:
	* TriangleSetGL.cxx:
	* TriangleSetGL.h:
	New files: arbitrary triangulated surface.

	* RGTopFrame.cxx:
	Create a dummy event directory if none exists on AddRenderElement.

	* RGValuators.cxx:
	* RGValuators.h:
	Added class RGTriVecValuator, a composite widget for editing
	three-vectors. Used by ZTransEditor.

	* LinkDef.h:
	List new classes.

2006-10-13  Matevz Tadel  <matevz.tadel@cern.ch>

	* Track.cxx:
	* Track.h:
	Added contructor from TPartice.

2006-10-12  Matevz Tadel  <matevz.tadel@cern.ch>

	EVE-dev

	* BoxSet.h:
	Fix wrong numerical constant in transformation assignment.

	* RGBrowser.cxx:
	Added comment about problems with getting context-menu for
	pointed-to object.

	* RGTopFrame.cxx:
	* RGTopFrame.h:
	Added data-members for important GUI elements (master-frame,
	master-tab); added method 'AddCanvasTab(const char* name)'.

	* Reve.cxx:
	* Reve.h:
	Use TString as exception base instead of std::string.

	* VSDSelector.cxx:
	* VSDSelector.h:
	Brought in sync with changes in render-element
	management/conventions.

2006-10-04  Matevz Tadel  <matevz.tadel@cern.ch>

	EVE-dev

	* RenderElement.cxx:
	* RenderElement.h:
	Made RenderElement::ExportToCINT() virtual and reimplemented it in
	RenderElementObjPtr.

	* Track.cxx:
	* Track.h:
	Added optional TrackRnrStyle* argument to TrackList constructors;
	renamed mRnrStyle to fRnrStyle.

2006-10-02  Matevz Tadel  <matevz.tadel@cern.ch>

	EVE-dev

	* .SKEL-ged.cxx:
	* .SKEL-ged.h:
	* .SKEL-gl.cxx:
	* .SKEL-gl.h:
	* .SKEL.h:
	Changes for new geditor and gl two-level selection; added
	delarations of private copy-ctor and assignment-op.

	* RGEditor.h:
	Added method GetRnrElement().

	* RGTopFrame.cxx:
	* RGTopFrame.h:
	* RenderElement.cxx:
	Added RGTopFrame::PreDeleteRenderElement() and calls to it; so far
	it checks if the object is being displayed in the editor but can
	in principle check other things as well.

	* RenderElementEditor.cxx:
	Assgined RenderElementEditor fPriority 0 (to appear on top).

2006-09-27  Matevz Tadel  <matevz.tadel@cern.ch>

	* RGTopFrame.cxx:
	* RGTopFrame.h:
	* VSDSelector.cxx:
	Made GLCanvas un-editable to prevent users from drawing things
	over 3D scene; renamed the canvas data member from fCC to
	fGLCanvas. Renamed local variables not to dress-up as
	data-members.

2006-09-26  Matevz Tadel  <matevz.tadel@cern.ch>

	* RGBrowser.cxx:
	Hack to fix RenderElementObjPtr's colors in tree-view is no longer
	needed.

	* RGEditor.cxx:
	* RGEditor.h:
	Properly update items of render-elements; call gReve::Redraw3D()
	instead of pad modified/update. Added separate method
	DisplayRenderElement() that caches the render-element in a
	data-member to update it on change (needed for RenderElementObjPtr).

	* RGTopFrame.cxx:
	Use RGEditor::DisplayRenderElement() instead of
	DisplayObject(). Removed some never-used static structures.

	* RenderElement.cxx:
	Removed Redraw3D() from UpdateItems() as it can now be called from
	RGEditor::Update(); optimized item-updates in SetRnrElement() and
	SetMainColor().

	* PointSetArrayEditor.cxx:
	* TrackEditors.cxx:
	Added call to Update() in SetRange() methods.

2006-09-26  Matevz Tadel  <matevz.tadel@cern.ch>

	* RGBrowser.cxx:
	* RGEditor.cxx:
	* RGEditor.h:
	Use new functionality from TGedEditor.

	* PointSetArrayEditor.cxx:
	* PointSetArrayEditor.h:
	* RGeoNodeEditors.cxx:
	* RGeoNodeEditors.h:
	* RenderElementEditor.cxx:
	* RenderElementEditor.h:
	* TrackEditors.cxx:
	* TrackEditors.h:
	Conform to new TGedFrame paradigm in ROOT.

2006-09-04  Matevz Tadel  <matevz.tadel@cern.ch>

	* MCHelixLine.hi:
	Fix effc++ warnings and most blatant coding-convention violations.

2006-08-30  Matevz Tadel  <matevz.tadel@cern.ch>

	* GeoNode.h:
	* PODs.h:
	* PointSet.cxx:
	* PointSet.h:
	* PointSetArrayEditor.cxx:
	* PointSetArrayEditor.h:
	* QuadSet.cxx:
	* QuadSet.h:
	* RGTopFrame.cxx:
	* RGTopFrame.h:
	* RGValuators.h:
	* RGeoNodeEditors.cxx:
	* RGeoNodeEditors.h:
	* RenderElement.cxx:
	* RenderElement.h:
	* RenderElementEditor.cxx:
	* RenderElementEditor.h:
	* Reve.h:
	* TTreeTools.h:
	* Track.cxx:
	* Track.h:
	* TrackEditors.cxx:
	* TrackEditors.h:
	* VSD.cxx:
	* VSD.h:
	* VSDEvent.cxx:
	* VSDEvent.h:
	* VSDSelector.cxx:
	* VSDSelector.h:
	Fix effc++ warnings.

	* LinkDef.h:
	* RGBrowser.cxx:
	* RGBrowser.h:
	Removed code for gled-like object editors (obsolete, somewhat
	decayed); fix effc++ warnings.

2006-08-29  Matevz Tadel  <matevz.tadel@cern.ch>

	EVE-dev

	* BoxSetGL.cxx:
	* QuadSetGL.cxx:
	Added ifdefs for post root-5.11.0 prototype of SetModelCheckClass().

	* PointSet.cxx:
	In Reset: added call to PointSet3D::ClearIds().

	* RGTopFrame.cxx:
	* RGTopFrame.h:
	Added support for control of camera-reset to Redraw3D(); when
	opening GL window disable automatic camera reset on update and on
	double-click.

2006-08-04  Matevz Tadel  <matevz.tadel@cern.ch>

	* PointSet.cxx:
	* RGBrowser.cxx:
	Commented-out info print statements.

2006-07-11  Matevz Tadel  <matevz.tadel@cern.ch>

	* RMacro.cxx:
	* RMacro.h:
	Bypass buggy TMacro ctor (caused problems on paths including '.',
	like /afs/cern.ch/).

2006-07-11  Matevz Tadel  <matevz.tadel@cern.ch>

	* RenderElement.cxx:
	* RenderElement.h:
	Added method RenderElementListBase::DestroyElements().

2006-07-10  Matevz Tadel  <matevz.tadel@cern.ch>

	* Event.cxx:
	* Event.h:
	Removed files: the contents moved to VSDEvent and renamed
	accordingly.

	* EventBase.cxx:
	* EventBase.h:
	New files: common base class for an event object (VSDEvent and
	Alieve::Event).

	* VSDEvent.cxx:
	* VSDEvent.h:
	New files: rename of class Reve::Event, now subclassed from
	EventBase.

	* LinkDef.h:
	Reflect changes in event classes.

	* Reve.h:
	Added include TError.h.

	* RGTopFrame.cxx:
	* RGTopFrame.h:
	Changed current-event pointer from TObject to EventBase; made
	global-store and event-stores render elements; improved interface
	for adding/removing render-elements.

	* RenderElement.cxx:
	* RenderElement.h:
	Implemented proper reference management accross render-elements,
	render-element-lists and tree-items; implemented methods for
	removal and destruction of render-elements.

	* GeoNode.cxx:
	* GeoNode.h:
	* PointSet.cxx:
	* PointSet.h:
	* RGeoNodeEditors.cxx:
	* Track.cxx:
	* Track.h:
	Proper management of dependent render-elements, renamed
	FullUpdate() to UpdateItems() and changed inheritance order
	(derive RenderElement first).

2006-07-03  Matevz Tadel  <matevz.tadel@cern.ch>

	* TTreeTools.cxx:
	* TTreeTools.h:
	* LinkDef.h:
	Added new classes TPointSelector and TPointSelectorConsumer
	allowing more natural extraction of point-data from trees.

	* PointSet.cxx:
	* PointSet.h:
	Implemented the TPointSelectorConsumer interface for PointSet and
	PointSetArray; in PointSetArray removed obsolete methods
	MakeScrollbar() and HandleScrollEvent().

2006-06-27  Matevz Tadel  <matevz.tadel@cern.ch>

	* BoxSetGL.cxx:
	Skip render-state initialization if no boxes present.

	* GeoNode.cxx:
	* GeoNode.h:
	Added option to render GeoTopNodeRnrEl at a given global position
	(requires ROOT > 5.11.7).

	* RGBrowser.cxx:
	* RGBrowser.h:
	* RGTopFrame.cxx:
	Fixed creation of editor frame so that it uses X client's
	SetRoot() functionality. This should (finally) close the issue.

	* RMacro.cxx:
	Check for macro via full-path (fTitle); save macro as '.C' not
	'.Cexec'.

	* Reve.cxx:
	In CheckMacro() use TInterpreter::IsLoaded(mac) instead of
	searching the list of global functions.

	* VSDSelector.cxx:
	Fixed code for hit and cluster import to work with 'new' render
	element registration mechanism.

2006-06-21  Matevz Tadel  <matevz.tadel@cern.ch>

	* LinkDef.h:
	* RMacro.cxx:
	* RMacro.h:
	New class Reve::RMacro: a sub-class of TMacro that tries to unload
	the macros properly before/after the operation.

	* RGTopFrame.cxx:
	* RGTopFrame.h:
	Provide TFoler fMacroFolder to all consumers, register
	Reve::RMacro mime type on start-up.

	* Reve.cxx:
	* Reve.h:
	Added global function Bool_t Reve:CheckMacro().

2006-06-20  Matevz Tadel  <matevz.tadel@cern.ch>

	* Track.cxx:
	* Track.h:
	In TrackList: added ImportHits/Clusters(); removed obsolete
	MkPtScrollBar().

2006-06-19  Matevz Tadel  <matevz.tadel@cern.ch>

	* PointSet.cxx:
	* PointSet.h:
	In PointSetArray: added member for default daughter PointSet
	capacity (fDefPointSetCapacity) and method DeleteBins(). Set
	daughter polymarker stuff in InitBins() instead of CloseBins().

	* RGValuators.cxx:
	* RGValuators.h:
	Consistently use nuber of slider positions in RGValuator.

	* RenderElement.h:
	Added method RenderElementListBase::RemoveElements().

2006-06-14  Matevz Tadel  <matevz.tadel@cern.ch>

	* BoxSetGL.h:
	Added non-protected wrapper Render() for DirectDraw().

	* PointSet.cxx:
	* PointSet.h:
	Subclassed point-set-array from TAttMarker, propagate changes to
	all children.

	* PointSetArrayEditor.cxx:
	Removed stale printout.

	* RGTopFrame.cxx:
	Print exceptions to terminal also.

2006-06-13  Matevz Tadel  <matevz.tadel@cern.ch>

	* Track.cxx:
	Draw charged tracks as straight lines when magnetic field is near
	zero.

2006-06-12  Matevz Tadel  <matevz.tadel@cern.ch>

	* MCHelixLine.hi:
	Formatting changes.

	* RenderElement.cxx:
	* RenderElement.h:
	Renamed RenderElement::SetMainColorByPixel(Pixel_t) back to
	RenderElement::SetMainColor(Pixel_t); there seemed to be a problem
	when dependencies were not generated properly.

	* Track.cxx:
	* Track.h:
	Added methods Track::ImportHits() and Track::ImportClusters();
	fixed a charge value inconsistency yielding reconstructed
	track charge to be 1/3.

2006-06-09  Matevz Tadel  <matevz.tadel@cern.ch>

	* PointSet.h:
	Added friend PointSetArrayEditor.

	* PointSetArrayEditor.cxx:
	* PointSetArrayEditor.h:
	* TrackEditors.cxx:
	* TrackEditors.h:
	Use RGDoubleValuator for range-selection widget.

	* RGTopFrame.cxx:
	Accept -mode cmd-line option as an alias for -revemode.

	* RGValuators.cxx:
	Added some padding for labels.

2006-06-02  Matevz Tadel  <matevz.tadel@cern.ch>

	* RGTopFrame.cxx:
	* RGTopFrame.h:
	Added method UndrawRenderElement().

	* RenderElement.cxx:
	* RenderElement.h:
	Implemented dtor for RenderElement removing all instances from
	browsers.

	* RGValuators.cxx:
	* RGValuators.h:
	Added method RGValuator::SetEnabled().

2006-06-01  Matevz Tadel  <matevz.tadel@cern.ch>

	* BoxSet.cxx:
	* BoxSetGL.cxx:
	* QuadSet.cxx:
	* QuadSet.h:
	* QuadSetGL.cxx:
	Added preprocessor conditionals to support ROOT > 5.11.2.

2006-05-31  Matevz Tadel  <matevz.tadel@cern.ch>

	EVE-dev branch

	* LinkDef.h:
	* RGValuators.cxx:
	* RGValuators.h:
	New valuator widget classes RGValuator and RGDoubleValuator.

2006-05-31  Matevz Tadel  <matevz.tadel@cern.ch>

	EVE-dev branch

	* BoxSet.h:
	Added method ArrTrans().

	* Reve.cxx:
	Added setup of macro/include paths into function
	SetupEnvironment().

	* reve_main/reve_main.cxx:
	Removed macro/include path setup.

2006-05-23  Matevz Tadel  <matevz.tadel@cern.ch>

	EVE-dev branch

	* RGBrowser.cxx:
	* RGTopFrame.cxx:
	Use RenderElement* as user-data of list-tree entries (it was
	TObject* before).

	* LinkDef.h:
	* RenderElement.cxx:
	* RenderElement.h:
	Added class RenderElementObjPtr to allow display and control of
	pure TObjects (see alice-macros/region_marker.C for an
	example). This is not perfect as there is no way to get
	color-change updates from the editor (can fix this when i get
	control over TGedEditor::Update()). RenderElement::GetObject() is
	now virtual.

	* Reve.cxx:
	* Reve.h:
	Added function FindColorVar() to allow RenderElementObjPtr objects
	to peek into appropriate color.

2006-05-23  Matevz Tadel  <matevz.tadel@cern.ch>

	EVE-dev branch

	* BoxSet.cxx:
	* BoxSet.h:
	Do not initialize bbox in ctor. Moved ctor to cxx file, removed
	Init().

	* RGBrowser.cxx:
	* RGBrowser.h:
	Fix for editor window not appearing under some window
	managers. For me it was working OK under fvwm and KDE (any focus
	policy) but not at all under Gnome. This fixed my gnome problem
	but it's quite likely the problem is not completely solved.

2006-05-18  Matevz Tadel  <matevz.tadel@cern.ch>

	EVE-dev branch

	* RGTopFrame.cxx:
	Added missing initializations. In particular, fCurrentEvent,
	fCurrentEventLTI and fGeometryLTI were not initialized and this
	caused segvs for usage without bootstrap with alieve_init.C macro.

2006-05-17  Matevz Tadel  <matevz.tadel@cern.ch>

	EVE-dev branch

	* LinkDef.h:
	* Reve.h:
	New class Reve::ReferenceCount; to be used as secondary base class.

2006-05-15  Matevz Tadel  <matevz.tadel@cern.ch>

	EVE-dev branch

	* Reve.cxx:
	* Reve.h:
	New function ColorFromIdx().

	* BoxSet.cxx:
	* BoxSet.h:
	* BoxSetGL.cxx:
	* BoxSetGL.h:
	New files: a set of boxes with direct GL rendering.

	* LinkDef.h:
	Pragmas for BoxSet/GL.

	* ChangeLog:
	New file.
