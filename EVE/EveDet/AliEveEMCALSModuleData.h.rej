diff a/EVE/EveDet/AliEveEMCALSModuleData.h b/EVE/EveDet/AliEveEMCALSModuleData.h	(rejected hunks)
@@ -21,37 +21,35 @@
 class TClonesArray;
 class TGeoNode;
 class TGeoMatrix;
+class TStyle;
+class TGedFrame;
+class TBuffer3DTypes;
+class TBuffer3D;
+class TVirtualPad;
+class TVirtualViewer3D;
+
 class TEvePointSet;
 class TEveQuadSet;
-
 class TEveBoxSet;
 class TEveFrameBox;
 class TEvePointSet;
 class TEveTrans;
 class TTree;
-class TStyle;
-class TGedFrame;
-class TBuffer3DTypes;
-class TBuffer3D;
-class TVirtualPad;
-class TVirtualViewer3D;
-class AliRun;
-class AliEMCALGeometry;
-class AliESDEvent;
-class AliEMCAL;
-class AliEMCALHit;
-class AliEMCALDigit;
+
 class AliEMCALGeometry;
 
 class AliEveEMCALSModuleData : public TObject
 {
 public:
   
-  AliEveEMCALSModuleData(Int_t chamber,AliEMCALGeometry* geom,TGeoNode* node, TGeoHMatrix* m);
+  AliEveEMCALSModuleData(Int_t chamber, AliEMCALGeometry* geom, TGeoNode* node); //, TGeoHMatrix* m);
+  
   virtual ~AliEveEMCALSModuleData();
 
   void        DropData();
+  
   void        Init(Int_t sm);
+  
   void        RegisterDigit  (Int_t AbsId, Int_t isupMod, Double_t iamp, Double_t ix, Double_t iy, Double_t iz);
   void        RegisterCluster(Int_t isupMod, Double_t iamp, Double_t ix, Double_t iy, Double_t iz); 
   void        RegisterHit    (Int_t AbsId, Int_t isupMod, Double_t iamp, Double_t ix, Double_t iy, Double_t iz); 
@@ -59,6 +57,7 @@ public:
   Int_t       GetNDigits()   const { return fNDigits   ; } 
   Int_t       GetNClusters() const { return fNClusters ; } 
   Int_t       GetNHits()     const { return fNHits     ; } 
+  
   Int_t       GetSmId()      const { return fSmId      ; }
   Int_t       GetNsm()       const { return fNsm       ; }
 
@@ -78,12 +77,11 @@ public:
   void        GetSModuleSmallDBox(Float_t& bbox0, Float_t& bbox1, Float_t& bbox2) 
   const { bbox0 = fgSModuleSmallDBox0; bbox1 = fgSModuleSmallDBox1; bbox2 = fgSModuleSmallDBox2;}
   
-//  void        GetSModuleCenter(Float_t& bboxCenter0, Float_t& bboxCenter1, Float_t& bboxCenter2) 
-//  const { bboxCenter0 = fgSModuleCenter0; bboxCenter1 = fgSModuleCenter1; bboxCenter2 = fgSModuleCenter2;}
-  
   Float_t     GetPhiTileSize()   const { return fPhiTileSize ; }
   Float_t     GetEtaTileSize()   const { return fEtaTileSize ; }
-  TGeoMatrix* GetSModuleMatrix() const { return fMatrix      ; }
+  
+  //TGeoMatrix* GetSModuleMatrix() const { return fMatrix      ; }
+  TGeoMatrix* GetSModuleMatrix(Int_t sm) const { return (TGeoMatrix*) fNode->GetDaughter(sm)->GetMatrix(); }
   
  protected:
   
@@ -118,12 +116,8 @@ public:
   static Float_t    fgSModuleSmallDBox1;   ///< SM envelope box, 1/3 DCAL
   static Float_t    fgSModuleSmallDBox2;   ///< SM envelope box, 1/3 DCAL
   
-  static Float_t    fgSModuleCenter0;      ///< SM envelope box
-  static Float_t    fgSModuleCenter1;      ///< SM envelope box
-  static Float_t    fgSModuleCenter2;      ///< SM envelope box
-
-  TGeoMatrix*       fMatrix;               ///< Matrix for local to global transformation
-  TGeoHMatrix*      fHMatrix;              ///< Matrix for local to global transformation
+  //  TGeoMatrix*       fMatrix;               ///< Matrix for local to global transformation (needed?)
+  //  TGeoHMatrix*      fHMatrix;              ///< Matrix for local to global transformation (needed?)
 
  private:
   
@@ -133,7 +127,7 @@ public:
   AliEveEMCALSModuleData& operator=(const AliEveEMCALSModuleData& esmdata); 
   
   /// \cond CLASSIMP
-  ClassDef(AliEveEMCALSModuleData, 1); 
+  ClassDef(AliEveEMCALSModuleData, 2); 
   /// \endcond
 
 };
