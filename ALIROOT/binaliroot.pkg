#-*- Mode: Makefile -*-

SRCS:=aliroot.cxx
CSRCS:=fpu.c

ELIBSDIR:=



ELIBS:= MUONcore MUONgeometry MUONrec MUONsim MUONbase MUONtrigger MUONraw MUONcalib MUONmapping \
        TPCbase TPCsim TPCrec TPCfast \
	ITSbase ITSsim ITSrec PMDbase PMDsim PMDrec TRDbase \
        TRDsim TRDrec TRDfast \
	FMDbase FMDsim FMDrec TOFbase TOFrec TOFsim PHOSUtils PHOSbase PHOSsim PHOSrec \
	ACORDEbase ACORDEsim ACORDErec \
        HMPIDbase HMPIDrec HMPIDsim \
        ZDCbase ZDCsim ZDCrec VZERObase VZEROsim VZEROrec \
        EMCALUtils EMCALbase EMCALsim EMCALrec BCM \
        STRUCT T0base T0sim T0rec EVGEN STEERBase ESD AOD CDB STEER \
        THijing hijing \
        FASTSIM microcern \
	RAWDatabase RAWDatarec RAWDatasim \
	HLTbase MUONevaluation \
#       THbtp TEPEMGEN \
#	THerwig herwig TPHIC

ifeq (macosx,$(ALICE_TARGET))

ELIBSCPP:=$(filter-out microcern,$(ELIBS))
ELIBSCPP:=$(filter-out lhapdf,$(ELIBSCPP))
ELIBSCPP:=$(filter-out herwig,$(ELIBSCPP))
PACKLDFLAGS:=$(LDFLAGS) $(ELIBSCPP:%=-Wl,-u,_G__cpp_setupG__%)
# On Mac OS X gcc we add the fink libraries
ELIBSDIR+=$(FINK_ROOT)/lib
endif

# The two variables below are used for the creation of profile target.
# ARLIBS stands for ARchive LIBrarieS and for each module one wants to profile
# consists of dictionary object file and static library itself.
# The shared libraries for modules without profiling are listed in the second
# variable SHLIBS (SHared LIBrarieS).
# Please note that the order of static libraries is important, the ones
# which provide code for the others have to be placed after their "clients".
# For example if ITS uses TPC code, the order has to be ITS TPC 

ARLIBS:= \
   FMD/tgt_$(ALICE_TARGET)/G__FMDbase.o $(LIBPATH)/libFMDbase.a \
   FMD/tgt_$(ALICE_TARGET)/G__FMDsim.o $(LIBPATH)/libFMDsim.a \
   FMD/tgt_$(ALICE_TARGET)/G__FMDrec.o $(LIBPATH)/libFMDrec.a \
   ACORDE/tgt_$(ALICE_TARGET)/G__ACORDEbase.o $(LIBPATH)/libACORDEbase.a \
   ACORDE/tgt_$(ALICE_TARGET)/G__ACORDEsim.o $(LIBPATH)/libACORDEsim.a \
   ACORDE/tgt_$(ALICE_TARGET)/G__ACORDErec.o $(LIBPATH)/libACORDErec.a \
   HMPID/tgt_$(ALICE_TARGET)/G__HMPIDbase.o $(LIBPATH)/libHMPIDbase.a \
   HMPID/tgt_$(ALICE_TARGET)/G__HMPIDsim.o $(LIBPATH)/libHMPIDsim.a \
   HMPID/tgt_$(ALICE_TARGET)/G__HMPIDrec.o $(LIBPATH)/libHMPIDrec.a \
   ZDC/tgt_$(ALICE_TARGET)/G__ZDCbase.o $(LIBPATH)/libZDCbase.a \
   ZDC/tgt_$(ALICE_TARGET)/G__ZDCsim.o $(LIBPATH)/libZDCsim.a \
   ZDC/tgt_$(ALICE_TARGET)/G__ZDCrec.o $(LIBPATH)/libZDCrec.a \
   VZERO/tgt_$(ALICE_TARGET)/G__VZERObase.o $(LIBPATH)/libVZERObase.a \
   VZERO/tgt_$(ALICE_TARGET)/G__VZEROsim.o $(LIBPATH)/libVZEROsim.a \
   VZERO/tgt_$(ALICE_TARGET)/G__VZEROrec.o $(LIBPATH)/libVZEROrec.a \
   EMCAL/tgt_$(ALICE_TARGET)/G__EMCALUtils.o $(LIBPATH)/libEMCALUtils.a \
   EMCAL/tgt_$(ALICE_TARGET)/G__EMCALbase.o $(LIBPATH)/libEMCALbase.a \
   EMCAL/tgt_$(ALICE_TARGET)/G__EMCALsim.o $(LIBPATH)/libEMCALsim.a \
   EMCAL/tgt_$(ALICE_TARGET)/G__EMCALrec.o $(LIBPATH)/libEMCALrec.a \
   T0/tgt_$(ALICE_TARGET)/G__T0base.o $(LIBPATH)/libT0base.a \
   T0/tgt_$(ALICE_TARGET)/G__T0sim.o $(LIBPATH)/libT0sim.a \
   T0/tgt_$(ALICE_TARGET)/G__T0rec.o $(LIBPATH)/libT0rec.a \
   TOF/tgt_$(ALICE_TARGET)/G__TOFbase.o $(LIBPATH)/libTOFbase.a \
   TOF/tgt_$(ALICE_TARGET)/G__TOFsim.o $(LIBPATH)/libTOFsim.a \
   TOF/tgt_$(ALICE_TARGET)/G__TOFrec.o $(LIBPATH)/libTOFrec.a \
   TRD/tgt_$(ALICE_TARGET)/G__TRDbase.o $(LIBPATH)/libTRDbase.a \
   TRD/tgt_$(ALICE_TARGET)/G__TRDsim.o $(LIBPATH)/libTRDsim.a \
   TRD/tgt_$(ALICE_TARGET)/G__TRDrec.o $(LIBPATH)/libTRDrec.a \
   TRD/tgt_$(ALICE_TARGET)/G__TRDfast.o $(LIBPATH)/libTRDfast.a \
   PMD/tgt_$(ALICE_TARGET)/G__PMDbase.o $(LIBPATH)/libPMDbase.a \
   PMD/tgt_$(ALICE_TARGET)/G__PMDsim.o $(LIBPATH)/libPMDsim.a \
   PMD/tgt_$(ALICE_TARGET)/G__PMDrec.o $(LIBPATH)/libPMDrec.a \
   MUON/tgt_$(ALICE_TARGET)/G__MUONmapping.o $(LIBPATH)/libMUONmapping.a \
   MUON/tgt_$(ALICE_TARGET)/G__MUONmapping.o $(LIBPATH)/libMUONcalib.a \
   MUON/tgt_$(ALICE_TARGET)/G__MUONgeometry.o $(LIBPATH)/libMUONgeometry.a \
   MUON/tgt_$(ALICE_TARGET)/G__MUONbase.o $(LIBPATH)/libMUONbase.a \
   MUON/tgt_$(ALICE_TARGET)/G__MUONsim.o $(LIBPATH)/libMUONsim.a \
   MUON/tgt_$(ALICE_TARGET)/G__MUONrec.o $(LIBPATH)/libMUONrec.a \
   MUON/tgt_$(ALICE_TARGET)/G__MUONraw.o $(LIBPATH)/libMUONraw.a \
   PHOS/tgt_$(ALICE_TARGET)/G__PHOSUtils.o $(LIBPATH)/libPHOSUtils.a \
   PHOS/tgt_$(ALICE_TARGET)/G__PHOSbase.o $(LIBPATH)/libPHOSbase.a \
   PHOS/tgt_$(ALICE_TARGET)/G__PHOSsim.o $(LIBPATH)/libPHOSsim.a \
   PHOS/tgt_$(ALICE_TARGET)/G__PHOSrec.o $(LIBPATH)/libPHOSrec.a \
   HLT/tgt_$(ALICE_TARGET)/G__HLTbase.o $(LIBPATH)/libHLTbase.a \
   ITS/tgt_$(ALICE_TARGET)/G__ITSbase.o $(LIBPATH)/libITSbase.a \
   ITS/tgt_$(ALICE_TARGET)/G__ITSsim.o $(LIBPATH)/libITSsim.a \
   ITS/tgt_$(ALICE_TARGET)/G__ITSrec.o $(LIBPATH)/libITSrec.a \
   STRUCT/tgt_$(ALICE_TARGET)/G__STRUCT.o $(LIBPATH)/libSTRUCT.a \
   TPC/tgt_$(ALICE_TARGET)/G__TPCbase.o $(LIBPATH)/libTPCbase.a \
   TPC/tgt_$(ALICE_TARGET)/G__TPCsim.o $(LIBPATH)/libTPCsim.a \
   TPC/tgt_$(ALICE_TARGET)/G__TPCrec.o $(LIBPATH)/libTPCrec.a \
   TPC/tgt_$(ALICE_TARGET)/G__TPCfast.o $(LIBPATH)/libTPCfast.a \
   STEER/tgt_$(ALICE_TARGET)/G__STEER.o $(LIBPATH)/libSTEER.a \
   STEER/tgt_$(ALICE_TARGET)/G__ESD.o $(LIBPATH)/libESD.a \
   STEER/tgt_$(ALICE_TARGET)/G__CDB.o $(LIBPATH)/libCDB.a \
   RAW/tgt_$(ALICE_TARGET)/G__RAWDatabase.o $(LIBPATH)/libRAWDatabase.a \
   RAW/tgt_$(ALICE_TARGET)/G__RAWDatasim.o $(LIBPATH)/libRAWDatasim.a \
   RAW/tgt_$(ALICE_TARGET)/G__RAWDatarec.o $(LIBPATH)/libRAWDatarec.a \
   RAW/tgt_$(ALICE_TARGET)/G__MDC.o $(LIBPATH)/libMDC.a

#SHLIBS:= $(BINLIBDIRS) -lEVGEN -lEGPythia6 -lPythia6 -lpythia6 -lAliPythia6 -llhapdf -lTHijing -lhijing -lTHbtp -lTHerwig -lherwig -lTEPEMGEN -lTPHIC -lFASTSIM -lmicrocern
SHLIBS:= $(BINLIBDIRS) -lEVGEN -lEGPythia6 -lPythia6 -lpythia6 -lAliPythia6 -llhapdf -lTHijing -lhijing -lTHerwig -lherwig -lTPHIC -lFASTSIM -lmicrocern

