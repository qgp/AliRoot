cdABOUT:
Authors: Jens Wiechula 
         Marian Ivanov (marian.ivanov@cern.ch)
 
Scripts for viusalization and analysis of the TPC OCDB entries and visualization of trends.
For visualization and analisys purposes root trees and queries on top of trees are used.

Algorithm:
1. Creation of the run lists.   (Expert operation) 
2. Making a calibration trees.  (Expert operation)
3. OCDB visualization analysis. (Non /software/ expert mode) 

Requiroments:
1. AliRoot installed.
2. Alien   installed + valid alien certificate
3. In some cases (only to speed up tree creation process) the batch farm can be used.  

----------
Quickstart
-----------

Without thinking, you can do the following to create a tree with calibration entries.
The default settings should work, however you might want to change them for 'better' 
performance. 

Do the following:
1. Setup environment
   1.a) gui dependend variables
        export SCRIPTDIR=$ALICE_ROOT/TPC/scripts
        export PATH=$SCRIPTDIR:$PATH
	source $ALICE_ROOT/TPC/scripts/guiEnv.sh
   1.b) Modify your guiEnv.sh script in $SCRIPTDIR
   1.c) Run: source guiEnv.sh debug    
   1.d) Check the output of script. All checks has to be OK.
     
2. Run tree creation (Jens Wiechula scripts) Options:
   2.a)  Run on a list of run numbers with name 'list.txt', one run number per line
         makeCalibTree -l list.txt
   2.b) Run on a range of run numbers:
        makeCalibTree -r 75000-80000
   2.c) Run automatic tree creation for all runs in the
        data taking period which was set up (see below)
        !!!WARNING!!! this will take quite some time
        makeCalibTree -a

3. Run tree creation for extended statistic. This part can be run only if batchcommand specified.  (Marian Ivanov part of scripts)
   WARNING  this is just example usage of expert mode:
   bgroup=/bgui
   ifirst=79000	
   ilast=102000
   step=250
   runList=`pwd`/run.list
   bgadd $bgroup
   for ((  startRun=$ifirst; startRun<$ilast; startRun=startRun+$step )) ; do 
      let endRun=$startRun+$step 
      echo $startRun $endRun   
       echo $BATCHCOMMAND -g $bgroup -oo $GUI_OUTDIR/logs/out$startRun.log -eo $GUI_OUTDIR/logs/err$startRun.log makeCalibTree.sh $runList $startRun $endRun;
    $BATCHCOMMAND -g $bgroup -oo $GUI_OUTDIR/logs/out$startRun.log -eo $GUI_OUTDIR/logs/err$startRun.log  makeCalibTree.sh $runList $startRun $endRun;    
   done;

4. Start the GUI browser. This should work always (even on your laptop). 
guiTime



-------------------
General information
-------------------
The macros and shell scripts used are stored in $ALICE_ROOT/TPC/CalibMacros/guiTime
If you would like to modify some setting (see below), but do not have write access to this
directory, you can copy the complete directory somewhere else and setup the environment
variables accordingly:

export SCRIPTDIR=path_to_my_directory
export PATH=$SCRIPTDIR:$PATH

- setup scripts
All user relevant setup is done the shell script 'guiEnv' and the root macro 'ConfigOCDB.C'
All other files don't need to be modified by the user.

- scripts for the tree creation:
makeCalibTree:        Steering script to launch the tree creation
makeCalibTreeList:    script running the actual root process to create the tree

- scripts to start the gui:
gui 'filename':       Start the CalibViewerGUI using the tree in file 'filename'. Invokes the script
                      startGUI.C
guiTime ['filename']: Start the CalibViewerGUItime. Optionally a filename containing the calibration
                      calibration tree can be specified. Otherwise the trees from the directory setup
                      in guiEnv will be used (see below). Invokes the script startGUItime.C

-oter scripts:
loadlibsREC.C:        Root macro to load only libraries needed to start the gui and tree creation.


----------------
Customised setup
----------------

- Defining the OCDB directories (ConfigOCDB.C):
Before starting the tree creation or gui the macro 'ConfigOCDB.C' is exectued. This macro should contain
all the setup needed to point to the proper OCDB directories. If alien is used, alien needs also to be
setup in the macro. Open the macro for examples.

- General output information (guiEnv):
In the 'guiEnv' script environment variables defining default output directories etc. See comments in the
file for explanations.


Troubleshouting:

1. Check your environment.
   source guiEnv.sh debug
   1.a) If not execuitng check your $PATH
   1.b) Check the output of script. All checks should be indicated OK.
2. Modify environment if neccessary
3. Missing ConfigOCDB.C macro. This macro is not provided by default.
   It is setup specific. You should contact experts to get it.   
4. Wrong ConfigOCDB.C macro, tests:
   4.a) ls $SCRIPTDIR/ConfigOCDB.C  - file should exist
   4.b) run ConfigOCDB.C macro in aliroot session. Check the output.

In case of further problems, please inform authors.