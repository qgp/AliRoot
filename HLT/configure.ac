dnl -*- mode: autoconf -*- 
dnl
dnl $Id$
dnl template for the configuration script for the Alice HLT 
dnl framework and components
dnl 
dnl ------------------------------------------------------------------
AC_INIT([Alice High Level Trigger] , [0.3], [Matthias.Richter@ift.uib.no], alice-hlt)

dnl ------------------------------------------------------------------
dnl the package from CVS contains the old Makefiles as well. In order to
dnl prevent them from becoming overwritten, we require a separate build
dnl directory
if test "`dirname $0`" = "." ; then
   AC_ERROR([please run the script from a separate build directory])
fi

dnl ------------------------------------------------------------------
AC_CANONICAL_SYSTEM
AC_PREFIX_DEFAULT(${PWD})
AC_CONFIG_SRCDIR(BASE/AliHLTComponent.cxx)
AM_INIT_AUTOMAKE
AC_PROG_CC
AC_PROG_CXX
AC_PROG_LIBTOOL

AC_DEBUG
AC_OPTIMIZATION

dnl ------------------------------------------------------------------
dnl
dnl Check for ROOT
dnl
ROOT_PATH(, [have_root=1], [AC_ERROR([Stop! The HLT package needs ROOT.])])
AM_CONDITIONAL(HAVE_ROOT, test "x$have_root" = "x1" )

dnl ------------------------------------------------------------------
# TODO: make this configurable through arguments
#Define whether you want to run with ALIROOT or only ROOT
AH_TEMPLATE([ALIHLT_USEPACKAGE],[running environment])
ALIHLT_USEPACKAGE=ALIROOT
#ALIHLT_USEPACKAGE=ROOT
#ALIHLT_USEPACKAGE=STANDALONE
AC_DEFINE(use_aliroot)
AC_DEFINE(use_root)
CPPFLAGS="$CPPFLAGS ${ROOTCFLAGS}"

dnl ------------------------------------------------------------------
dnl check for AliRoot features
AC_LANG_PUSH(C++)
have_aliroot=no
AC_ARG_WITH(aliroot,[  --with-aliroot	top of the AliRoot installation],
		    [test -d $with_aliroot && ALICE_ROOT=$with_aliroot],
		    [])

if test "x$ALICE_ROOT" != "x" && test -d $ALICE_ROOT ; then
  dnl ------------------------------------------------------------------
  dnl Try to estimate the system architecture
  case $host_os:$host_cpu in
  linux*:x86_64*)	alice_target='linuxx8664gcc'		;;
  linux*)		alice_target='linux'			;;
  *)			alice_target='unknown'			;;
  esac
  if test "x$alice_target" = "xunknown" ; then
    if test -z $ALICE_TARGET ; then
    AC_MSG_ERROR([Can not estimate system architecture.
    To avoid the problem, set the ALICE_TARGET variable appropriately.
    Please send the following information to Matthias.Richter@ift.uib.no:
	${PACKAGE}: no AliRoot target definition for os=$host_os and cpu=$host_cpu ])
    else
    AC_MSG_NOTICE([Unknown system architecture.
    Please send the following information to Matthias.Richter@ift.uib.no:
	${PACKAGE}: no AliRoot target definition for os=$host_os and cpu=$host_cpu ])  
    fi
  else
    if test "x$ALICE_TARGET" != "x" && test "x$ALICE_TARGET" != "x$alice_target" ; then
    AC_MSG_WARN([The ALICE_TARGET variable does not match your current system
    overriding $ALICE_TARGET by $alice_target])
    fi
    ALICE_TARGET=$alice_target
  fi
  ALIROOTLIBDIR=${ALICE_ROOT}/lib/tgt_${ALICE_TARGET}
  ALIROOTINCDIR=${ALICE_ROOT}/include
  test -d ${ALIROOTLIBDIR} || AC_MSG_WARN([can not find AliRoot library directory $ALIROOTLIBDIR])
  test -d ${ALIROOTINCDIR} || AC_MSG_WARN([can not find AliRoot include directory $ALIROOTINCDIR])
fi

AC_MSG_CHECKING([for AliRoot])
if test "x$ALICE_ROOT" != "x" \
   && test -d ${ALIROOTLIBDIR} \
   && test -d ${ALIROOTINCDIR}; then
  have_aliroot=$ALICE_ROOT
else
  ALIROOTLIBDIR=
  ALIROOTINCDIR=
fi
AC_MSG_RESULT([$have_aliroot])

if test ! "x$have_aliroot" = "xno" ; then
  # we check for the libSTEER library which is linked to
  # - the ROOT libs libGeom libMinuit libVMC libEG
  # - the AliRoot libESD libRAWData (libRAWDatarec from v4-04-Rev-07)
  # - ROOT libCint needs also libdl
  # - from Nov 1 2006 TTreeFormula is needed by AliTagAnalysis and requires
  #   libTreePlayer.so
  ALIROOT_CPPFLAGS="-I${ALIROOTINCDIR} -I${ALICE_ROOT}/RAW"
  ALIROOT_LDFLAGS="-L${ALIROOTLIBDIR}"
  ALIROOT_LIBS="-lESD -lGeom -lMinuit -lVMC -lEG -ldl -lTreePlayer"
  save_CPPFLAGS=$CPPFLAGS
  save_LDFLAGS=$LDFLAGS
  save_LIBS=$LIBS
  CPPFLAGS="$save_CPPFLAGS $ALIROOT_CPPFLAGS"
  LDFLAGS="$save_LDFLAGS -L${ROOTLIBDIR} $ALIROOT_LDFLAGS"
  
  # check for certain AliRoot libraries/files/features
  # CBD library is present since AliRoot version v4-05-00 (02.06.2006)
  LIBS="$save_LIBS $ROOTLIBS $ALIROOT_LIBS"
  CHECKLIB=CDB
  AC_CHECK_LIB([$CHECKLIB],[_init],[ALIROOT_LIBS="$ALIROOT_LIBS -l$CHECKLIB"])

  # splitted RAW libraries since AliRoot version v4-04-Rev-07 (09.08.2006)
  have_alirawdata=no
  LIBS="$save_LIBS $ROOTLIBS $ALIROOT_LIBS"
  CHECKLIB=RAWDatabase
  AC_CHECK_LIB([$CHECKLIB],[_init],
	[ALIROOT_LIBS="$ALIROOT_LIBS -l$CHECKLIB"
	 LIBS="$save_LIBS $ROOTLIBS $ALIROOT_LIBS"
	 CHECKLIB=RAWDatarec
	 AC_CHECK_LIB([$CHECKLIB],[_init],
               [ALIROOT_LIBS="$ALIROOT_LIBS -l$CHECKLIB"
	        AC_DEFINE(HAVE_ALIRAWDATA)
	        have_alirawdata=$CHECKLIB])],
	[# second pass with -RAWData
	 CHECKLIB="-lRAWData"
	 LIBS="$save_LIBS $ROOTLIBS $ALIROOT_LIBS $CHECKLIB -lSTEER"
	 AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <AliRawReaderMemory.h>
 				       #include <AliRawReaderFile.h>
 				       #include <AliRawReaderDate.h>
 				       #include <AliRawReaderRoot.h>], 
                                     [AliRawReaderMemory mreader;
 				       AliRawReaderFile freader;
 				       AliRawReaderDate dreader(NULL,0);
 				       AliRawReaderRoot rreader(NULL,0);])],
                                     [AC_DEFINE(HAVE_ALIRAWDATA)
 				       ALIROOT_LIBS="$ALIROOT_LIBS $CHECKLIB"
 				       have_alirawdata=$CHECKLIB], 
 				      [have_alirawdata=no])
	]) dnl AC_CHECK_LIB RAWDatabase
  AC_MSG_CHECKING(for AliRawReader classes in RAWData libraries)
  AC_MSG_RESULT($have_alirawdata)

  LIBS="$save_LIBS $ROOTLIBS $ALIROOT_LIBS"
  CHECKLIB=STEER
  AC_CHECK_LIB([$CHECKLIB],[_init],[ALIROOT_LIBS="$ALIROOT_LIBS -l$CHECKLIB"])

  if test ! "x$have_aliroot" = "xno" ; then
    # the HLTTPCLib needs to link agains TPCbase and TPCrec
    # TPC library for AliTPCParam and AliSimDigits used in 
    # AliHLTTPCFileHandler.h and AliHLTTPCDisplay.cxx
    saveALIROOT_CPPFLAGS="$ALIROOT_CPPFLAGS"
    ALIROOT_CPPFLAGS="$saveALIROOT_CPPFLAGS -I${ALICE_ROOT}/TPC"
    CPPFLAGS="$save_CPPFLAGS $ALIROOT_CPPFLAGS"
    have_alitpc=yes
    AC_MSG_CHECKING(for required classes in TPC libraries)
    if test ! "x$have_alitpc" = "xno" ; then
      save_ALIROOT_LIBS=$ALIROOT_LIBS
      ALIROOT_LIBS="$save_ALIROOT_LIBS -lTPCbase -lTPCrec"
      LIBS="$save_LIBS $ROOTLIBS $ALIROOT_LIBS"
      AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <AliSimDigits.h>
  				       #include <AliTPCParam.h>
				       #include <AliTPCParamSR.h>
				       #include <AliTPCDigitsArray.h>
				       #include <AliTPCClustersArray.h>
				       #include <AliTPCcluster.h>     
				       #include <AliTPCClustersRow.h>], 
                                      [AliSimDigits dig;
  				       AliTPCParam param;
				       AliTPCParamSR paramsr;
				       AliTPCDigitsArray digarray;
				       AliTPCClustersArray clustarray;
				       AliTPCcluster clust;
				       AliTPCClustersRow row])],
                                      [AC_DEFINE(HAVE_ALITPC)
				       saveALIROOT_CPPFLAGS=$ALIROOT_CPPFLAGS
				       saveALIROOT_LIBS=$ALIROOT_LIBS], 
  				      [have_alitpc=no
				       ALIROOT_CPPFLAGS=$saveALIROOT_CPPFLAGS
				       ALIROOT_LIBS=$saveALIROOT_LIBS])
    fi
    AC_MSG_RESULT($have_alitpc)
  fi

  if test ! "x$have_alirawdata" = "xno" ; then
    # check for header files needed by the TPCLib/AliHLTTPCDigitReaderPacket
    # the header file has been moved to the TPC module
    CPPFLAGS="$save_CPPFLAGS $ALIROOT_CPPFLAGS"
    # AliRawReaderMemory.h AliRawReaderFile.h already checked
    #AC_CHECK_HEADERS([AliRawReaderMemory.h AliRawReaderFile.h AliTPCRawStream.h])
    AC_CHECK_HEADERS([AliTPCRawStream.h])
  fi

  if test "x$have_aliroot" = "xno" ; then
    ALIROOT_CPPFLAGS=
    ALIROOT_LDFLAGS=
    ALIROOT_LIBS=
  fi
  CPPFLAGS=$save_CPPFLAGS
  LDFLAGS=$save_LDFLAGS
  LIBS=$save_LIBS
  if test ! "x$have_aliroot" = "xno" ; then
    CPPFLAGS="$CPPFLAGS -DALIROOTVERSION=\\\"Unknown\\\""
  fi
fi
AC_LANG_POP(C++)
AC_SUBST([ALIROOT_CPPFLAGS])
AC_SUBST([ALIROOT_LDFLAGS])
AC_SUBST([ALIROOT_LIBS])
CPPFLAGS="$CPPFLAGS -DROOTVERSION=\\\"`${ROOTCONF} --version`\\\""

dnl ------------------------------------------------------------------
AC_MSG_CHECKING([whether to impose strict coding conventions])
AC_ARG_ENABLE(strict,
  [AC_HELP_STRING([--enable-strict],
      [enable coding convention checks ])],
  [],[enable_strict=no])
if test "x$enable_strict" = "xyes" ; then
   CPPFLAGS="$CPPFLAGS -Weffc++"
fi
AC_MSG_RESULT([$enable_strict])

dnl ------------------------------------------------------------------
AC_MSG_CHECKING([whether to compile sample library])
AH_TEMPLATE([HLT_SAMPLE],[hlt sample library])
AC_ARG_ENABLE(sample,
  [AC_HELP_STRING([--enable-sample],
      [compile the sample library ])],
  [],[enable_sample=yes])
if test "x$enable_sample" = "xyes" ; then 
  AC_DEFINE(HLT_SAMPLE)
fi
AM_CONDITIONAL(EN_HLT_SAMPLE, test x$enable_sample = xyes)
AC_MSG_RESULT([$enable_sample])

dnl ------------------------------------------------------------------
AC_MSG_CHECKING([whether to compile tpc library])
AH_TEMPLATE([HLT_TPC],[hlt tpc library])
AC_ARG_ENABLE(tpc,
  [AC_HELP_STRING([--enable-tpc],
      [compile the tpc library ])],
  [],[enable_tpc=yes])
if test "x$have_aliroot" = "xno" ; then
   enable_tpc="no...requires.AliRoot"
elif test "x$have_alitpc" = "xno" ; then
   enable_tpc="no...requires.AliRoot.TPC.libraries"
fi
if test "x$enable_tpc" = "xyes" ; then 
  AC_DEFINE(HLT_TPC)
fi
AM_CONDITIONAL(EN_HLT_TPC, test x$enable_tpc = xyes)
AC_MSG_RESULT([$enable_tpc])

dnl ------------------------------------------------------------------
if test "x$enable_tpc" = "xyes" ; then 
  AC_MSG_CHECKING([whether to compile tpc reference library])
  AH_TEMPLATE([HLT_TPCREF],[hlt tpc reference library])
  AC_ARG_ENABLE(tpcref,
    [AC_HELP_STRING([--enable-tpcref],
        [compile the tpc reference library ])],
    [],[enable_tpcref=no])
  if test "x$enable_tpcref" = "xyes" ; then 
    AC_DEFINE(HLT_TPCREF)
  fi
  AC_MSG_RESULT([$enable_tpcref])
fi
AM_CONDITIONAL(EN_HLT_TPCREF, test x$enable_tpcref = xyes)

dnl ------------------------------------------------------------------
AC_MSG_CHECKING([whether to enable HLT logging])
AH_TEMPLATE([NOLOGGING],[disable hlt logging])
AC_ARG_ENABLE(logging,
  [AC_HELP_STRING([--enable-logging],
      [enable logging])],
  [],[enable_logging=yes])
if test "x$enable_logging" != "xyes" ; then 
  AC_DEFINE(NOLOGGING)
fi
AC_MSG_RESULT([$enable_logging])

dnl ------------------------------------------------------------------
AC_MSG_CHECKING([whether to enable saving MC data through the chain])
AH_TEMPLATE([DOMC],[MC saving])
AC_ARG_ENABLE(mc-saving,
  [AC_HELP_STRING([--enable-mc-saving],
      [enable saving MC data through the chain])],
  [],[enable_mc_saving=no])
if test "x$enable_mc_saving" = "xyes" ; then 
  AC_DEFINE(DOMC)
fi
AC_MSG_RESULT([$enable_mc_saving])

dnl ------------------------------------------------------------------
AC_MSG_CHECKING([whether to enable AliRoot NEWIO])
AH_TEMPLATE([use_newio],[AliRoot NEWIO])
AC_ARG_ENABLE(newio,
  [AC_HELP_STRING([--enable-newio],
      [enable AliRoot NEWIO ])],
  [],[enable_newio=yes])
if test "x$enable_newio" = "xyes" ; then 
  AC_DEFINE(use_newio)
fi
AC_MSG_RESULT([$enable_newio])

dnl ------------------------------------------------------------------
dnl certainly something old, but we keep the define
AC_MSG_CHECKING([whether to use ROWHOUGH])
AH_TEMPLATE([USEROWHOUGH],[HLT ROWHOUGH])
AC_ARG_ENABLE(rowhough,
  [AC_HELP_STRING([--enable-rowhough],
      [use ROWHOUGH ])],
  [],[enable_rowhough=no])
if test "x$enable_rowhough" = "xyes" ; then 
  AC_DEFINE(USEROWHOUGH)
fi
AC_MSG_RESULT([$enable_rowhough])

dnl ------------------------------------------------------------------
dnl
dnl Documentation
dnl
AC_ARG_VAR(DOXYGEN, The Documentation Generator)
AC_PATH_PROG(PERL, perl)
AC_PATH_PROG(DOXYGEN, doxygen)
AM_CONDITIONAL(HAVE_DOXYGEN, test ! "x$DOXYGEN" = "x")
HAVE_DOT=NO
DOT_PATH=
AC_PATH_PROG(DOT, dot)
if ! test "x$DOT" = "x" ; then
   HAVE_DOT=YES
   DOT_PATH=`dirname $DOT`
fi
AC_SUBST([HAVE_DOT])
AC_SUBST([DOT_PATH])

dnl ------------------------------------------------------------------
dnl inatallation directory for libraries
dnl 
if test "x$prefix" != "xNONE" && test $ALICE_ROOT = $prefix ; then
libdir=\${exec_prefix}/lib/tgt_$ALICE_TARGET
AC_MSG_NOTICE([libdir set to $libdir])
fi
dnl ------------------------------------------------------------------
AC_CONFIG_FILES([Makefile 
		 BASE/Makefile
		 SampleLib/Makefile
		 TPCLib/Makefile
		 TPCLib/Ref/Makefile
		 doc/Makefile
		 doc/doxygen.conf])


AC_OUTPUT
dnl
dnl EOF
dnl

