# $Id$
# Makefile template for the Alice HLT PHOS library

MODULE 				= AliHLTPHOS

EXTRA_DIST			= AliHLTPHOSLinkDef.h

AM_CPPFLAGS			= @ALIROOT_CPPFLAGS@ \
				  -I$(top_srcdir)/BASE

# library definition
lib_LTLIBRARIES			=  libAliHLTPHOS.la

# library sources
libAliHLTPHOS_la_SOURCES	= AliHLTPHOSPulseGenerator.cxx \
			          AliHLTPHOSRawAnalyzerPeakFinder.cxx \
				  AliHLTPHOSRawAnalyzerCrude.cxx \
				  AliHLTPHOSRawAnalyzerKLevel.cxx \
		                  AliHLTPHOSRawAnalyzerLMS.cxx \
				  AliHLTPHOSRawAnalyzerChiSquareFit.cxx \
				  AliHLTPHOSRawAnalyzer.cxx \
				  AliHLTPHOSEmcCalibData.cxx \
				  AliHLTPHOSRawAnalyzerComponent.cxx \
				  AliHLTPHOSRawAnalyzerCrudeComponent.cxx \
				  AliHLTPHOSRawAnalyzerPeakFinderComponent.cxx \
			          AliHLTPHOSDefinitions.cxx \
				  AliHLTPHOSModuleMergerComponent.cxx \
				  AliHLTPHOSFileWriterComponent.cxx \
				  PeakFinderTest.cxx

# class header files, the link definition for the root dictionary
# will be created from the names of the header files
CLASS_HDRS			= AliHLTPHOSPulseGenerator.h \
				  AliHLTPHOSRawAnalyzer.h \
				  AliHLTPHOSRawAnalyzerPeakFinder.h \
				  AliHLTPHOSRawAnalyzerCrude.h \
				  AliHLTPHOSRawAnalyzerKLevel.h \
				  AliHLTPHOSRawAnalyzerLMS.h \
				  AliHLTPHOSRawAnalyzerChiSquareFit.h \
				  AliHLTPHOSEmcCalibData.h \
				  AliHLTPHOSRawAnalyzerComponent.h \
				  AliHLTPHOSRawAnalyzerCrudeComponent.h \
				  AliHLTPHOSRawAnalyzerPeakFinderComponent.h \
				  AliHLTPHOSModuleMergerComponent.h \
                                  AliHLTPHOSFileWriterComponent.h

pkginclude_HEADERS		= $(CLASS_HDRS) \
				  AliHLTPHOSCommonDefs.h \
			          AliHLTPHOSDefinitions.h \
				  AliHLTPHOSModuleCellEnergyDataStruct.h\
				  AliHLTPHOSRcuCellEnergyDataStruct.h \
				  AliHLTPHOSValidCellDataStruct.h

# version info and linking flags for the library
libAliHLTPHOS_la_LDFLAGS	= -L@ROOTLIBDIR@ \
				  @ROOTLIBS@ \
				  @ALIROOT_LDFLAGS@ \
				  @ALIROOT_LIBS@ \
				  -version-info 0:0:0

# automatic generation of data and time of library build
COMPILE_INFO			=  AliHLTPHOSCompileInfo.cxx

# set the file name for the generated root dictionary
DICTCPP				=  AliHLTPHOS-DICT.cxx
# add additional include files which are necessary for the compilation of the 
# dictionary files and which are not part of the CLASS_HDRS
DICTINCLUDE			= 

nodist_libAliHLTPHOS_la_SOURCES = $(COMPILE_INFO) \
				  $(DICTCPP)

CLEANFILES			= $(COMPILE_INFO)

include $(top_srcdir)/make.dict

$(COMPILE_INFO): $(libAliHLTPHOS_la_SOURCES) $(pkginclude_HEADERS) $(noinst_HEADERS) Makefile.am
	@echo '//automatically generated compilation info' > $@
	@echo '//!!! DO NOT EDIT THIS FILE !!!' >> $@
	@echo '//add changes in Makefile.am' >> $@
	@echo '#include <iostream>' >> $@
	@echo 'void $(MODULE)CompileInfo( char*& date, char*& time)' >> $@
	@echo '{date=__DATE__; time=__TIME__; return;}' >> $@
	@echo >> $@
	@echo 'void __init()'>> $@
	@echo '{std::cout << "lib$(MODULE) build on " << __DATE__ << " - " << __TIME__ << std::endl;}'>> $@
