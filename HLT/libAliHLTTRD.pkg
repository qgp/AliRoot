#-*- Mode: Makefile -*-
# $Id$
# package definition for the libAliHLTTRD library

# class header files, the link definition for the root dictionary
# will be created from the names of the header files
CLASS_HDRS:= \
        AliHLTTRDClusterizerComponent.h \
        AliHLTTRDDefinitions.h \
        AliHLTTRDTrackerV1Component.h \
	AliHLTTRDClusterizer.h \
	AliHLTTRDEsdWriterComponent.h \
	AliHLTTRDCalibrationComponent.h \
	AliHLTTRDCluster.h \
	AliHLTTRDTracklet.h \
	AliHLTTRDTrack.h \
	AliHLTTRDAgent.h \
	AliHLTTRDUtils.h \
	AliHLTTRDOfflineClusterizerComponent.h \
	AliHLTTRDOfflineTrackerV1Component.h \
	AliHLTTRDClusterHistoComponent.h \
	AliHLTTRDTrackHistoComponent.h

# library sources
MODULE_SRCS= \
	$(CLASS_HDRS:.h=.cxx)

# library headers
# in most cases you might have already added all the header files to
# the CLASS_HDRS variable. So we just use the content of this. You
# can simply add more header files which don't contain classes with
# ROOT dictionary support
MODULE_HDRS:= \
	AliHLTTRDTrackletWordArray.h \
	$(CLASS_HDRS)

# The LinkDef file required by the ROOT dictionary generation can be
# generated automatically. For the all header files specified in
# CLASS_HDRS an entry will be generated
# pragma link C++ class <class-name>+;
#
# If the default behavior is not enough, you can provide a custom
# *LinkDef.h to the MODULE_DHDR variable. Leave MODULE_DHDR empty to
# enable automatic generation. 
MODULE_DHDR:=

EINCLUDE := HLT/BASE HLT/BASE/util HLT/TRD TRD TRD/Cal STEER RAW STAT

LIBRARY_DEP := -lHLTbase -lAliHLTUtil -lESD -lCDB -lTRDrec -lTRDbase \
               -lSTEER -lSTEERBase -lRAWDatarec

###############################################################################
#
# do not change anything below this line
#
include $(MODDIR)/hlt.conf

SRCS:=$(patsubst %,TRD/%,$(MODULE_SRCS))
CINTHDRS:=$(patsubst %,TRD/%,$(CLASS_HDRS))
HDRS:=$(patsubst %,TRD/%,$(MODULE_HDRS))
DHDR:=$(patsubst %,TRD/%,$(MODULE_DHDR))
CINTAUTOLINK:= $(shell test "x$(MODULE_DHDR)" = "x" && echo 1)

EDEFINE      := ${HLTDEFS}
PACKCXXFLAGS := ${HLTCXXFLAGS}
PACKCFLAGS   := ${HLTCLFAGS}
PACKDCXXFLAGS:= ${HLTDCXXFLAGS}
PACKSOFLAGS  := $(HLTSOFLAGS)
