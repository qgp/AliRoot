# $Id$
# Makefile template for the Alice HLT HOMER library
# 
# This is a ported version of the HOMER library of the HLT
# PubSub package HLT-stable-20070905.141318 (rev 2375) on Sep 14 2007

MODULE				= HOMER

ROOT_DEFS			= USE_ROOT
AM_CPPFLAGS			= -DMODULE=$(MODULE) \
				  $(foreach i, $(ROOT_DEFS), -D$(i))

# library definition
# for now we only create the version with ROOT support
# the build system is not completely ready yet, the approach with the copied
# sources and replacement of USE_ROOT is not yet working. Send an email to
# Matthias.Richter@ift.uib.no if you need this feature
#lib_LTLIBRARIES			=  libHOMER.la libAliHLTHOMER.la
lib_LTLIBRARIES			=  libAliHLTHOMER.la

# version info for the library
LIBRARY_VERSION			= '0:0:0'

# MODDIR is set by the AliRoot build system and denotes the topdir
# of the module, we must set it since the package definition libAliHLTHOMER.pkg
# includes another common configuration file
MODDIR				= $(top_srcdir)
PKGDEF				= $(MODDIR)/libAliHLTHOMER.pkg
CINTFLAGS			=
include $(top_srcdir)/libAliHLTHOMER.pkg

NOROOT_SRC			= $(MODULE_SRCS:.cxx=_noRoot.cxx)

# ##########################################################
# general settings for both libraries
#
HOMER_DOC			= HOMERReader.tex

EXTRA_DIST			= $(HOMER_DOC)

# automatic generation of data and time of library build
COMPILE_INFO			=  AliHLTHOMERCompileInfo.cxx

# library headers
pkginclude_HEADERS		= $(MODULE_HDRS) $(MODULE_DHDR)

# ##########################################################
# library version with ROOT support
#

# library sources
libAliHLTHOMER_la_SOURCES	= $(MODULE_SRCS)

# linker flags
libAliHLTHOMER_la_LDFLAGS	= -L@ROOTLIBDIR@ \
				  @ROOTLIBS@ \
				  -version-info $(LIBRARY_VERSION)

# set the file name for the generated root dictionary
DICTCPP				=  HOMER-DICT.cxx
nodist_libAliHLTHOMER_la_SOURCES = $(COMPILE_INFO) \
				   $(DICTCPP)

# ##########################################################
# library version w/o ROOT support
#
# enable this if library w/o ROOT support is build

# # library sources (generated)
# nodist_libHOMER_la_SOURCES 	= $(COMPILE_INFO) \
# 				   $(NOROOT_SRC)

# # # linker flags
# libHOMER_la_LDFLAGS		= -version-info $(LIBRARY_VERSION)

# ##########################################################

CLEANFILES			=  $(COMPILE_INFO) \
				   $(NOROOT_SRC)

DICTFILES			=  $(DICTCPP) $(DICTCPP:.cxx=.h)
DICTHEADERS			=  $(CLASS_HDRS)

CLEANFILES			+= $(DICTFILES)

# the rootcint buffer for macros is limited to 1024 characters
# we have to filter out some of the defines
DEFFILTER			= -DPACKAGE* -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1

# as the first step of the migration of the HOMER library to
# AliRoot we leave the class names as they are but change the
# file names. Thats why the automatic generation of the ROOT
# LinkDef file doesn't work for the moment
$(DICTCPP:.cxx=.h): $(DICTCPP)
	if test $@ ; then : ; else rm -f $< ; $(MAKE) $(MAKEFLAGS) $< ; fi 

$(DICTCPP): $(DICTHEADERS:%=$(srcdir)/%) $(MODULE_DHDR)
	if [ -x $(ROOTCINT) ]; then $(ROOTCINT) -f $@ -c $(CPPFLAGS) $(AM_CPPFLAGS) \
	 `for i in $(DEFS);do case $$i in $(foreach def, $(DEFFILTER), $(def) |) -DVERSION*);; *) echo -n " $$i";; esac; done` \
	 $(foreach i, $(DICTINCLUDE), $(i)) \
	 $^ ; fi

# include $(top_srcdir)/make.dict

$(NOROOT_SRC): $(MODULE_SRCS)
	cat $(srcdir)/$(@:_noRoot.cxx=.cxx) $(foreach i, $(ROOT_DEFS), | sed -e "s|$(i)|FALSE|") > $@

$(COMPILE_INFO): $(libAliHLTUtil_la_SOURCES) $(pkginclude_HEADERS) $(noinst_HEADERS) Makefile.am
	@echo '//automatically generated compilation info' > $@
	@echo '//!!! DO NOT EDIT THIS FILE !!!' >> $@
	@echo '//add changes in Makefile.am' >> $@
	@echo 'extern "C" void CompileInfo( char*& date, char*& time)' >> $@
	@echo '{date=__DATE__; time=__TIME__; return;}' >> $@

all-local: $(HOMER_DOC:.tex=.ps) $(HOMER_DOC:.tex=.pdf)

clean-local:
	rm -f $(HOMER_DOC:.tex=.pdf) $(HOMER_DOC:.tex=.ps) $(HOMER_DOC:.tex=.dvi) $(HOMER_DOC:.tex=.aux) $(HOMER_DOC:.tex=.log)

$(HOMER_DOC:.tex=.pdf): $(HOMER_DOC:.tex=.ps)
	ps2pdf13 -dEmebedAllFonts=true $^

$(HOMER_DOC:.tex=.ps): $(HOMER_DOC:.tex=.dvi)
	dvips -o $@ $^

$(HOMER_DOC:.tex=.dvi): $(HOMER_DOC)
	latex $^
	latex $^
