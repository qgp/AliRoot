# $Id$
# Makefile template for the Alice HLT framework

# be aware of the two different meanings of 'MODULE'
# 1. AliRoot classifies each detector and main sub-package as a module
#    so for all HLT library packages MODULE is equal HLT
# 2. The HLT stand-alone build system knows about sub-modules
#    e.g. for libHLTbase, MODULE=HLTbase
MODULE				= HLTbase

if EN_HLT_UTIL
UTIL_DIR=util
endif

SUBDIRS 			= . $(UTIL_DIR) interface

EXTRA_DIST			= HLTbaseLinkDef.h

AM_CPPFLAGS			= -DMODULE=$(MODULE)

bin_SCRIPTS			= setenv.sh setenv.csh

# library definition
lib_LTLIBRARIES			=  libHLTbase.la

# version info for the library
LIBRARY_VERSION			= '4:0:1'

# MODDIR is set by the AliRoot build system and denotes the topdir
# of the module, we must set it since the package definition libHLTbase.pkg
# includes another common configuration file
MODDIR				= $(top_srcdir)
PKGDEF				= $(MODDIR)/libHLTbase.pkg
include $(top_srcdir)/libHLTbase.pkg

# library sources
libHLTbase_la_SOURCES		= $(MODULE_SRCS)

# library headers
pkginclude_HEADERS		= $(MODULE_HDRS)

# linker flags
libHLTbase_la_LDFLAGS		= -L@ROOTLIBDIR@ \
				  @ROOTLIBS@ \
				  -version-info $(LIBRARY_VERSION)

# automatic generation of data and time of library build
COMPILE_INFO			=  HLTBaseCompileInfo.cxx

# set the file name for the generated root dictionary
DICTCPP				=  HLTbase-DICT.cxx
nodist_libHLTbase_la_SOURCES    =  $(COMPILE_INFO) \
				   $(DICTCPP)

CLEANFILES			=  $(COMPILE_INFO)

include $(top_srcdir)/make.dict

$(COMPILE_INFO): $(libHLTbase_la_SOURCES) $(pkginclude_HEADERS) $(noinst_HEADERS) Makefile.am
	@echo '//automatically generated compilation info' > $@
	@echo '//!!! DO NOT EDIT THIS FILE !!!' >> $@
	@echo '//add changes in Makefile.am' >> $@
	@echo 'void $(MODULE)CompileInfo( char*& date, char*& time)' >> $@
	@echo '{date=__DATE__; time=__TIME__; return;}' >> $@
